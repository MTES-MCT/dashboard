{"version":3,"sources":["utils.ts","components/Sidebar.tsx","components/Topbar.tsx","components/Grade.tsx","lib/lighthouse/getPerformanceScore.ts","lib/lighthouse/AccessibilityWarnings.tsx","components/Panel.tsx","components/Gauge.tsx","components/UpdownIo.tsx","components/Dashboard.tsx","components/HTTP.tsx","components/LightHouse.tsx","components/Nuclei.tsx","components/Owasp.tsx","components/TestSSL.tsx","components/Trackers.tsx","components/Wappalyzer.tsx","components/Dependabot.tsx","components/Codescan.tsx","components/Nmap.tsx","components/Url.tsx","components/Intro.tsx","components/ScrollToTop.tsx","components/About.tsx","components/WappalyzerDashboard.tsx","App.tsx","index.tsx"],"names":["smallUrl","url","toLowerCase","replace","getLastUrlSegment","substring","lastIndexOf","isToolEnabled","name","dashlordConfig","require","tools","length","includes","letterGradeValue","grade","A","B","C","D","E","F","Sidebar","key","report","sortedReport","sort","a","b","categories","uniq","filter","u","category","map","Nav","className","to","activeClassName","exact","size","style","marginTop","marginRight","whiteSpace","Topbar","Navbar","variant","bg","sticky","expand","justifyContent","height","fontSize","color","title","grades","Grade","label","small","newGrade","toUpperCase","Badge","minWidth","undefined","getPerformanceScore","numRequests","audits","diagnostics","details","items","totalByteWeight","maxByteWeight","score","Math","min","max","AccessibilityWarnings","Panel","children","info","Card","marginBottom","Title","background","padding","fontWeight","marginLeft","float","href","target","rel","Body","Gauge","props","canvas","useRef","span","gauge","useEffect","current","donut","Donut","CanvasGauge","setTextField","setOptions","options","maxValue","setMinValue","minValue","animationSpeed","set","value","textChangeHandler","passThroughProps","ref","display","defaultProps","percentColors","angle","lineWidth","radiusScale","pointer","strokeWidth","strokeColor","generateGradient","highDpiSupport","apdexToGrade","apdex","UpdownIo","data","urlUpdownio","token","Row","Col","xs","md","width","uptime","metrics","timings","total","ssl","valid","format","Date","expires_at","locale","frLocale","Alert","scoreToGrade","x1","x2","split","floor","IconUnknown","ColumnHeader","warning","textAlign","placement","trigger","overlay","maxWidth","cursor","stroke","LightHouseBadge","lhrCategories","lhr","toFixed","SSLBadge","overallGrade","testssl","find","entry","id","finding","HTTPBadge","http","ThirdPartiesTrackersBadge","thirdparties","count","trackersCount","trackers","trackersGrade","ThirdPartiesCookiesBadge","cookiesCount","cookies","cookiesGrade","NmapBadge","nmap","nmapCount","open_ports","Boolean","port","service","vulnerabilities","reduce","prev","curr","is_exploit","Number","parseFloat","cvss","nmapGrade","Map","orders","get","DependabotBadge","dependabot","dependabotCount","repo","vulnerabilityAlerts","totalCount","nodes","securityVulnerability","severity","dependabotGrade","CodescanBadge","codescan","codescanCount","alerts","rule","codescanGrade","UpDownIoUptimeBadge","updownio","updownioGrade","UpDownIoApDexBadge","defaultSort","order","column","dataKey","Dashboard","useState","sortBy","setSortBy","onColumnSort","useMemo","rows","orderBy","row","dataGetter","rowData","defaultColumnProps","sortable","align","flexGrow","cellRenderer","encodeURIComponent","accessibility","headerRenderer","seo","HttpRowBadge","scoreModifier","score_modifier","helpDocs","HTTP","failures","Object","keys","pass","Table","striped","bordered","hover","failure","i","score_description","toTime","ms","minutes","seconds","rest","toSize","bytes","factor","mb","kb","LightHouse","highlights","firstContentfulPaint","interactive","isNaN","lg","NucleiBadge","nucleiSeverities","nucleiOrder","indexOf","Nuclei","templateID","matcher_name","orderBySeverity","parseInt","riskcode","confidence","OwaspBadge","riskdesc","Owasp","site","flatMap","alert","severities","TestSSL","gradeEntry","severity_value","reverse","capReasons","reason","CookiesTable","colSpan","cookie","domain","httpOnly","secure","TrackersTable","tracker","type","message","EndPointsTable","endpoints","endpoint","Flag","geoip","country","Flags","iso_code","names","fr","hostname","ip","city","Trackers","hasIssues","push","Wappalyzer","technologies","techno","cat","join","website","node","Dependabot","package","advisory","references","reference","Codescan","html_url","description","sumCvss","vulnerability","orderByCvss","hasExploit","open_port","Nmap","host","Url","updateDate","fetchTime","Jumbotron","paddingTop","flex","tags","tag","formatDistanceToNow","screenshot","position","top","maxHeight","border","src","process","window","btoa","repository","zap","nuclei","wappalyzer","Intro","Button","ScrollToTop","pathname","useLocation","scrollTo","About","margin","UsageChart","BarChart","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Legend","Bar","fill","toChartData","item","urls","WappalyzerDashboard","allTechnologies","categoriesNames","t","c","getTechUrl","byTech","sortedTechs","getCategoriesByUrl","CardColumns","CategoryRoute","params","useParams","decodeURIComponent","TagRoute","UrlRoute","urlData","App","Container","fluid","role","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.332bcaf5.chunk.js","sourcesContent":["export const smallUrl = (url: string): string =>\n  url\n    .toLowerCase()\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\");\n\nexport const getHostName = (url: string): string =>\n  url\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\")\n    .replace(/^([^/]+)\\/.+$/, \"$1\");\n\nexport const getLastUrlSegment = (url: string): string =>\n  url.substring(url.lastIndexOf(\"/\") + 1);\n\nexport const sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\nexport const isToolEnabled = (name: DashlordTool): boolean => {\n  const dashlordConfig: DashlordConfig = require(\"./config.json\");\n  const hasTools = dashlordConfig.tools && dashlordConfig.tools.length;\n  return (\n    !hasTools || !!(dashlordConfig.tools && dashlordConfig.tools.includes(name))\n  );\n};\n\nexport const letterGradeValue = (grade: string): number => {\n  return (\n    {\n      \"A+\": 200,\n      A: 190,\n      \"A-\": 180,\n      \"B+\": 170,\n      B: 160,\n      \"B-\": 150,\n      \"C+\": 140,\n      C: 130,\n      \"C-\": 120,\n      \"D+\": 110,\n      D: 100,\n      \"D-\": 90,\n      \"E+\": 80,\n      E: 70,\n      \"E-\": 60,\n      \"F+\": 50,\n      F: 40,\n      \"F-\": 30,\n    }[grade] || 0\n  );\n};\n","import * as React from \"react\";\n\nimport { Nav } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Home, BarChart, Search } from \"react-feather\";\nimport uniq from \"lodash.uniq\";\n\nimport { smallUrl, sortByKey, isToolEnabled } from \"../utils\";\n\ntype SidebarProps = {\n  report: DashLordReport;\n};\n\nexport const Sidebar: React.FC<SidebarProps> = ({ report }) => {\n  const sortedReport = (report && report.sort(sortByKey(\"url\"))) || [];\n  const categories = uniq(\n    sortedReport.filter((u) => u.category).map((u) => u.category)\n  ).sort() as string[];\n  return (\n    <Nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n      <div className=\"sidebar-sticky pt-3\">\n        <ul className=\"nav flex-column\">\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <Home size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Accueil\n            </NavLink>\n            <NavLink\n              to=\"/intro\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <BarChart size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Introduction\n            </NavLink>\n          </li>\n        </ul>\n\n        {(categories.length > 1 && (\n          <React.Fragment>\n            <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n              <span>Catégories</span>\n            </h6>\n            <ul className=\"nav flex-column\">\n              {categories.map((category) => (\n                <li\n                  className=\"nav-item\"\n                  key={category}\n                  style={{\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  <NavLink\n                    className=\"nav-link\"\n                    to={`/category/${category}`}\n                    activeClassName=\"active\"\n                    exact={true}\n                  >\n                    <BarChart\n                      size={16}\n                      style={{ marginTop: -5, marginRight: 5 }}\n                    />\n                    {category}\n                  </NavLink>\n                </li>\n              ))}\n            </ul>\n          </React.Fragment>\n        )) ||\n          null}\n\n        {isToolEnabled(\"wappalyzer\") && (\n          <div>\n            <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n              <span>Rapports</span>\n            </h6>\n            <ul className=\"nav flex-column\">\n              <li\n                className=\"nav-item\"\n                style={{\n                  whiteSpace: \"pre\",\n                }}\n              >\n                <NavLink\n                  className=\"nav-link\"\n                  to={`/wappalyzer`}\n                  activeClassName=\"active\"\n                  exact={true}\n                >\n                  <BarChart\n                    size={16}\n                    style={{ marginTop: -5, marginRight: 5 }}\n                  />\n                  Technologies\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )||null}\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>Urls</span>\n        </h6>\n\n        <ul className=\"nav flex-column\">\n          {sortedReport.map((url) => (\n            <li\n              className=\"nav-item\"\n              key={url.url}\n              style={{\n                whiteSpace: \"pre\",\n              }}\n            >\n              <NavLink\n                className=\"nav-link\"\n                to={`/url/${url.url}`}\n                activeClassName=\"active\"\n                exact={true}\n              >\n                <Search size={16} style={{ marginTop: -5, marginRight: 5 }} />\n                {smallUrl(url.url)}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Nav>\n  );\n};\n","import * as React from \"react\";\nimport { Cloud, Info } from \"react-feather\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const Topbar = () => (\n  <Navbar\n    variant=\"dark\"\n    bg=\"dark\"\n    sticky=\"top\"\n    expand=\"lg\"\n    className=\"p-0 flex-md-nowrap shadow\"\n    style={{ justifyContent: 'space-between' }}\n  >\n    <Link to=\"/\">\n      <div\n        className=\"px-3\"\n        style={{ height: 30, fontSize: \"1.3rem\", color: \"var(--white)\" }}\n      >\n        <Cloud size={16} style={{ marginTop: -5, marginRight: 10 }} />\n        DashLord\n      </div>\n    </Link>\n    <Link title=\"À propos\" to=\"/about\" style={{ color: \"white\", marginRight: 5 }}><Info /></Link>\n  </Navbar>\n);\n","import * as React from \"react\";\n\nimport { Badge } from \"react-bootstrap\";\n\ntype GradeProps = {\n  grade: string | number;\n  label?: string | number | null;\n  small?: boolean;\n};\n\nconst grades = {\n  A: \"success\",\n  B: \"info\",\n  C: \"info\",\n  D: \"warning\",\n  E: \"danger\",\n  F: \"danger\",\n} as Record<string, string>;\n\nexport const Grade: React.FC<GradeProps> = ({ grade, label, small }) => {\n  const newGrade = (grade + \"\").substring(0, 1).toUpperCase();\n  const variant = grades[newGrade] || \"danger\";\n\n  return (\n    <Badge\n      variant={variant}\n      style={{ minWidth: 60, fontSize: small ? \"1.1em\" : \"2em\" }}\n    >\n      {label !== undefined ? label : grade}\n    </Badge>\n  );\n};\n","// compute a performance score from 0 to 100 from lighthouse report\nexport const getPerformanceScore = (report: LighthouseReport): number => {\n  const numRequests =\n    report.audits.diagnostics.details?.items &&\n    report.audits.diagnostics.details?.items[0].numRequests;\n  const totalByteWeight =\n    report.audits.diagnostics.details?.items &&\n    report.audits.diagnostics.details?.items[0].totalByteWeight;\n\n  const maxRequests = 50;\n  const maxByteWeight = 1024 * 1024;\n\n  let score = 100;\n\n  // penalty for additional requests : -5 per additionnal request\n  if (numRequests > maxRequests) {\n    score -= Math.min(100 / 2, (numRequests - maxRequests) * 5);\n  }\n  // penalty for big totalByteWeight : -20 per Mb\n  if (totalByteWeight > maxByteWeight) {\n    score -= Math.min(\n      100 / 2,\n      ((totalByteWeight - maxByteWeight) / (1024 * 1024)) * 20\n    );\n  }\n\n  score = Math.max(0, score / 100);\n  return score;\n};\n","import * as React from \"react\";\n\ntype AccessibilityWarningProps = {\n  style?: React.CSSProperties;\n};\n\nexport const AccessibilityWarnings = ({ style }: AccessibilityWarningProps) => (\n  <div style={style}>\n    Moins de 25% des critères d'accessibilité peuvent être testés\n    automatiquement, <strong>une expertise manuelle est requise</strong>.\n    <br />\n    <br />\n    Ce score ne représente pas le score RGAA mais une partie des bonnes\n    pratiques de base à appliquer.\n  </div>\n);\n","import * as React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-feather\";\n\ntype PanelProps = {\n  title: string;\n  children: React.ReactNode;\n  info?: string | React.ReactNode;\n  url?: string;\n  style?: object;\n  className?:string;\n};\n\nexport const Panel: React.FC<PanelProps> = ({ title, children, info, url, style, className }) => (\n  <Card style={{ marginBottom: 20, ...style }} className={className}>\n    <Card.Title style={{ background: \"#000091\", color: \"white\", padding: 10 }}>\n      {title}\n      {info && (\n        <span\n          style={{ fontWeight: \"normal\", fontSize: \"0.6em\", marginLeft: 10 }}\n        >\n          {info}\n        </span>\n      )}\n      {url && (\n        <a\n          style={{ color: \"white\", float: \"right\" }}\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <ExternalLink />\n        </a>\n      )}\n    </Card.Title>\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport { Gauge as CanvasGauge, Donut } from \"gaugeJS/dist/gauge.min\";\n\n// copied from https://unpkg.com/react-gaugejs@1.2.1/Gauge.js due to bad transpilation\n\ntype GaugeProps = {\n  maxValue?: number;\n  minValue?: number;\n  width?: number;\n  height?: number;\n  animationSpeed?: number;\n  options?: object;\n  donut?: boolean;\n  value: number;\n  className?: string;\n};\n\n/**\n * React wrapper for GaugeJS.\n * @param {*} props\n * @return {Object} React element\n */\nexport const Gauge: React.FC<GaugeProps> = (props) => {\n  const canvas = useRef();\n  const span = useRef();\n  const gauge = useRef();\n\n  useEffect(() => {\n    gauge.current = props.donut\n      ? new Donut(canvas.current)\n      : new CanvasGauge(canvas.current);\n    gauge.current.setTextField(span.current);\n    gauge.current.setOptions(props.options);\n    gauge.current.maxValue = props.maxValue;\n    gauge.current.setMinValue(props.minValue);\n    gauge.current.animationSpeed = props.animationSpeed;\n    gauge.current.set(props.value);\n  }, [props.donut]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    gauge.current.setOptions(props.options);\n  }, [props.options]);\n\n  useEffect(() => {\n    gauge.current.maxValue = props.maxValue;\n  }, [props.maxValue]);\n\n  useEffect(() => {\n    gauge.current.setMinValue(props.minValue);\n  }, [props.minValue]);\n\n  useEffect(() => {\n    gauge.current.animationSpeed = props.animationSpeed;\n  }, [props.animationSpeed]);\n\n  useEffect(() => {\n    gauge.current.set(props.value);\n  }, [props.value]);\n\n  /* eslint-disable no-unused-vars */\n  const {\n    maxValue,\n    minValue,\n    animationSpeed,\n    options,\n    donut,\n    value,\n    textChangeHandler,\n    ...passThroughProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  return (\n    <>\n      <canvas\n        ref={canvas}\n        className=\"gauge-canvas\"\n        {...passThroughProps}\n      ></canvas>\n      <span ref={span} style={{ display: \"none\" }}></span>\n    </>\n  );\n};\n\nGauge.defaultProps = {\n  maxValue: 3000,\n  minValue: 0,\n  animationSpeed: 32,\n  options: {\n    // staticLabels: {\n    //   font: \"10px sans-serif\", // Specifies font\n    //   labels: [100, 130, 150, 220.1, 260, 300], // Print labels at these values\n    //   color: \"#000000\", // Optional: Label text color\n    //   fractionDigits: 0, // Optional: Numerical precision. 0=round off.\n    // },\n    percentColors: [\n      [0.0, \"#FF4E42\"],\n      [0.5, \"#ffa400\"],\n      [0.9, \"#0CCE6B\"],\n      //[0.90, \"#ffa400\"],\n      //  [0.3, \"#ff0000\"],\n      // [0.5, \"#f9c802\"],\n      [1, \"#0CCE6B\"],\n    ],\n    angle: 0.25,\n    lineWidth: 0.44,\n    radiusScale: 1,\n    pointer: {\n      length: 0.6,\n      strokeWidth: 0.035,\n      color: \"#333\",\n    },\n    //limitMax: false,\n    //limitMin: false,\n    //colorStart: \"red\",\n    //colorStop: \"pink\",\n    strokeColor: \"#FF4E42\",\n    generateGradient: true,\n    highDpiSupport: true,\n  },\n  donut: false,\n  textChangeHandler: () => {},\n};\n\nexport default Gauge;\n","import * as React from \"react\";\nimport { Row, Col, Alert, Card } from \"react-bootstrap\";\nimport { format } from \"date-fns\";\nimport frLocale from \"date-fns/locale/fr\";\n\nimport { Panel } from \"./Panel\";\nimport { Gauge } from \"./Gauge\";\nimport { Grade } from \"./Grade\";\nimport { smallUrl } from \"../utils\";\n\ntype UpDownIoProps = { data: UpDownReport; url: string };\n\nexport const apdexToGrade = (apdex: number) => {\n  return apdex === 1\n    ? \"A\"\n    : apdex >= 0.8\n    ? \"B\"\n    : apdex > 0.6\n    ? \"C\"\n    : apdex > 0.4\n    ? \"D\"\n    : apdex > 0.2\n    ? \"E\"\n    : \"F\";\n};\n\nexport const UpdownIo: React.FC<UpDownIoProps> = ({ data, url }) => {\n  const urlUpdownio = (data && `https://updown.io/${data.token}`) || null;\n\n  return (\n    (urlUpdownio && smallUrl(data.url) === smallUrl(url) && (\n      <Panel\n        title=\"Temps de réponse\"\n        info=\"Informations collectées par updown.io\"\n        url={urlUpdownio}\n      >\n        <Row>\n          <Col xs={12} md={4} className=\"text-center mb-3\">\n            <Card>\n              <Gauge\n                width={100}\n                height={20}\n                value={data.uptime * 100}\n                minValue={0}\n                maxValue={100}\n                animationSpeed={32}\n              />\n              <Card.Body>\n                <Card.Title>\n                  Taux de disponibilité sur un mois glissant\n                </Card.Title>\n                <Card.Title style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}>\n                  {data.uptime + \"%\"}\n                </Card.Title>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          {data.metrics && (\n            <Col xs={12} md={4} className=\"text-center mb-3\">\n              <Card>\n                <Gauge\n                  width={100}\n                  height={20}\n                  value={Math.max(0, data.metrics.timings.total)}\n                  minValue={0}\n                  maxValue={1000}\n                  animationSpeed={32}\n                  options={{\n                    percentColors: [\n                      [0, \"#0CCE6B\"],\n                      [0.4, \"#0CCE6B\"],\n                      [0.6, \"#ffa400\"],\n                      [0.8, \"#FF4E42\"],\n                    ],\n                  }}\n                />\n                <Card.Body>\n                  <Card.Title>Temps de réponse</Card.Title>\n                  <Card.Title style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}>\n                    {data.metrics.timings.total + \"ms\"}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          )}\n\n          <Col xs={12} md={4} className=\"text-center mb-3\">\n            {data?.metrics?.apdex !== undefined && (\n              <Card style={{ marginBottom: 10 }}>\n                <Card.Body style={{ padding: 5 }}>\n                  <Card.Title>APDEX</Card.Title>\n                  <div>\n                    <Grade\n                      grade={apdexToGrade(data.metrics.apdex)}\n                      label={data.metrics.apdex}\n                    />\n                  </div>\n                </Card.Body>\n              </Card>\n            )}\n\n            {data.ssl && (\n              <Card>\n                <Card.Body style={{ padding: 5 }}>\n                  <Card.Title>\n                    Certificat TLS{\" \"}\n                    {data.ssl.valid ? (\n                      <Grade small grade=\"A+\" label=\"valide\" />\n                    ) : (\n                      <Grade small grade=\"F\" label=\"invalide\" />\n                    )}\n                  </Card.Title>\n                  <div style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}>\n                    expire le{\" \"}\n                    {format(new Date(data.ssl.expires_at), \"dd/MM/yyyy\", {\n                      locale: frLocale,\n                    })}\n                  </div>\n                </Card.Body>\n              </Card>\n            )}\n          </Col>\n        </Row>\n      </Panel>\n    )) || (\n      <Panel\n        title=\"Temps de réponse\"\n        info=\"Informations collectées par updown.io\"\n      >\n        <Alert variant=\"success\">Aucune donnée updown.io associée</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\nimport { useState, useMemo } from \"react\";\nimport { Slash, Info, Search, AlertTriangle } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"rc-tooltip\";\nimport orderBy from \"lodash.orderby\";\n\nimport BaseTable, { AutoResizer, Column, SortOrder } from \"react-base-table\";\n\nimport { Grade } from \"./Grade\";\nimport { smallUrl, isToolEnabled, letterGradeValue } from \"../utils\";\nimport { getPerformanceScore } from \"../lib/lighthouse/getPerformanceScore\";\nimport { AccessibilityWarnings } from \"../lib/lighthouse/AccessibilityWarnings\";\nimport { apdexToGrade } from \"./UpdownIo\";\n\nimport \"react-base-table/styles.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\ntype DashboardProps = { report: DashLordReport };\n\nconst remap = (value: number, x1: number, y1: number, x2: number, y2: number) =>\n  ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n\nconst scoreToGrade = (score: number) => {\n  const grades = \"A,B,C,D,E,F\".split(\",\");\n\n  const newGrade = Math.min(\n    grades.length - 1,\n    Math.floor(remap(score, 0, 1, 0, 6))\n  );\n\n  return grades[newGrade];\n};\n\nconst IconUnknown = () => <Slash size={20} />;\n\nconst getGradeTrackers = (count: number) => {\n  return count > 10 ? \"F\" : count > 2 ? \"C\" : count > 0 ? \"B\" : \"A\";\n};\n\nconst getGradeCookies = (count: number) => {\n  return count > 10\n    ? \"F\"\n    : count > 5\n    ? \"E\"\n    : count > 2\n    ? \"C\"\n    : count > 0\n    ? \"B\"\n    : \"A\";\n};\n\nconst getGradeUpdownio = (uptime: number) => {\n  return uptime > 0.99\n    ? \"A\"\n    : uptime > 0.98\n    ? \"B\"\n    : uptime > 0.97\n    ? \"C\"\n    : uptime > 0.96\n    ? \"D\"\n    : uptime > 0.95\n    ? \"E\"\n    : \"F\";\n};\n\nconst getDependabotNodeGrade = (nodes: DependabotNode[]) => {\n  return nodes.filter(\n    (a) =>\n      a.securityVulnerability.severity === \"CRITICAL\" ||\n      a.securityVulnerability.severity === \"HIGH\"\n  ).length\n    ? \"F\"\n    : nodes.length\n    ? \"B\"\n    : \"A\";\n};\n\ntype ColumnHeaderProps = {\n  title: string;\n  info: string;\n  warning?: React.ReactNode;\n};\n\nconst ColumnHeader: React.FC<ColumnHeaderProps> = ({\n  title,\n  info,\n  warning,\n}) => (\n  <div style={{ textAlign: \"center\" }}>\n    <span style={{ fontSize: \"0.9em\" }}>\n      {title}\n      <br />\n      <Tooltip\n        placement=\"bottom\"\n        trigger={[\"hover\"]}\n        overlay={<div style={{ maxWidth: 300 }}>{info}</div>}\n      >\n        <Info size={16} style={{ cursor: \"pointer\" }} />\n      </Tooltip>\n    </span>\n\n    {warning && (\n      <Tooltip\n        placement=\"bottom\"\n        trigger={[\"hover\"]}\n        overlay={<div style={{ maxWidth: 300 }}>{warning}</div>}\n      >\n        <AlertTriangle\n          size={16}\n          style={{\n            stroke: \"var(--danger)\",\n            marginLeft: 5,\n            cursor: \"pointer\",\n          }}\n        />\n      </Tooltip>\n    )}\n  </div>\n);\n\ntype BadgeProps = { report: UrlReport };\ntype LightHouseBadgeProps = BadgeProps & {\n  category: LighthouseReportCategoryKey;\n};\n\nconst LightHouseBadge: React.FC<LightHouseBadgeProps> = ({\n  report,\n  category,\n}) => {\n  const lhrCategories = report.lhr && report.lhr.categories;\n  if (!report.lhr || !lhrCategories) {\n    return <IconUnknown />;\n  }\n  // use custom scoring\n  lhrCategories[\"performance\"].score = getPerformanceScore(report.lhr);\n\n  const value =\n    lhrCategories &&\n    lhrCategories[category] &&\n    (lhrCategories[category].score as number);\n  return (\n    <Grade\n      small\n      grade={scoreToGrade(1 - value)}\n      label={(value * 100).toFixed() + \" %\"}\n    />\n  );\n};\n\nconst SSLBadge: React.FC<BadgeProps> = ({ report }) => {\n  const overallGrade =\n    report.testssl &&\n    report.testssl.find((entry) => entry.id === \"overall_grade\");\n  const value = overallGrade && overallGrade.finding;\n  if (!value) {\n    return <IconUnknown />;\n  }\n  return <Grade small grade={value} />;\n};\n\nconst HTTPBadge: React.FC<BadgeProps> = ({ report }) => {\n  const value = report.http && report.http.grade;\n  if (!value) {\n    return <IconUnknown />;\n  }\n  return <Grade small grade={value} />;\n};\n\nconst ThirdPartiesTrackersBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.thirdparties) {\n    return <IconUnknown />;\n  }\n  const trackersCount =\n    (report.thirdparties &&\n      report.thirdparties.trackers &&\n      report.thirdparties.trackers.length) ||\n    0;\n  const trackersGrade = getGradeTrackers(trackersCount);\n  return <Grade small grade={trackersGrade} label={trackersCount} />;\n};\n\nconst ThirdPartiesCookiesBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.thirdparties) {\n    return <IconUnknown />;\n  }\n  const cookiesCount =\n    (report.thirdparties &&\n      report.thirdparties.cookies &&\n      report.thirdparties.cookies.length) ||\n    0;\n  const cookiesGrade = getGradeCookies(cookiesCount);\n  return <Grade small grade={cookiesGrade} label={cookiesCount} />;\n};\n\nconst getNmapOpenPortGrade = (vulnerabilities: NmapVulnerability[]) => {\n  return vulnerabilities.filter(\n    (a) =>\n      a.is_exploit &&\n      Number.parseFloat(a.cvss) > 7\n  ).length\n    ? \"F\"\n    : vulnerabilities.length\n    ? \"B\"\n    : \"A\";\n};\n\nconst NmapBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.nmap) {\n    return <IconUnknown />;\n  }\n\n  // nmap\n  const nmapCount =\n    report.nmap &&\n    report.nmap.open_ports\n      .filter(Boolean)\n      .map((port) => port.service.vulnerabilities.length)\n      .reduce((prev, curr) => prev + curr, 0);\n  const maxGrade = (a: \"F\" | \"B\" | \"A\", b: \"F\" | \"B\" | \"A\") => {\n    const grades = new Map();\n    grades.set(\"F\", 3);\n    grades.set(\"B\", 2);\n    grades.set(\"A\", 1);\n    const orders = new Map();\n    orders.set(3, \"F\");\n    orders.set(2, \"B\");\n    orders.set(1, \"A\");\n    return orders.get(Math.max(grades.get(a), grades.get(b)));\n  };\n  const grades =\n    report.nmap &&\n    report.nmap.open_ports\n      .filter(Boolean)\n      .map((port) => getNmapOpenPortGrade(port.service.vulnerabilities));\n\n  if (!grades.length) {\n    return <IconUnknown />;\n  }\n\n  const nmapGrade = grades.reduce(maxGrade);\n  return <Grade small grade={nmapGrade} label={nmapCount} />;\n};\n\nconst DependabotBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.dependabot) {\n    return <IconUnknown />;\n  }\n\n  // dependabot\n  const dependabotCount =\n    report.dependabot &&\n    report.dependabot\n      .filter(Boolean)\n      .map((repo) => repo.vulnerabilityAlerts.totalCount)\n      .reduce((prev, curr) => prev + curr, 0);\n  const maxGrade = (a: \"F\" | \"B\" | \"A\", b: \"F\" | \"B\" | \"A\") => {\n    const grades = new Map();\n    grades.set(\"F\", 3);\n    grades.set(\"B\", 2);\n    grades.set(\"A\", 1);\n    const orders = new Map();\n    orders.set(3, \"F\");\n    orders.set(2, \"B\");\n    orders.set(1, \"A\");\n    return orders.get(Math.max(grades.get(a), grades.get(b)));\n  };\n  const grades =\n    report.dependabot &&\n    report.dependabot\n      .filter(Boolean)\n      .map((repo) => getDependabotNodeGrade(repo.vulnerabilityAlerts.nodes));\n\n  if (!grades.length) {\n    return <IconUnknown />;\n  }\n\n  const dependabotGrade = grades.reduce(maxGrade);\n  return <Grade small grade={dependabotGrade} label={dependabotCount} />;\n};\n\nconst getCodescanAlertGrade = (alerts: CodescanAlert[]) => {\n  return alerts.filter((a) => a.rule.severity === \"error\").length\n    ? \"F\"\n    : alerts.length\n    ? \"B\"\n    : \"A\";\n};\n\nconst CodescanBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.codescan) {\n    return <IconUnknown />;\n  }\n\n  // codescan\n  const codescanCount =\n    report.codescan &&\n    report.codescan\n      .filter(Boolean)\n      .map((repo) => (repo ? (repo.alerts ? repo.alerts.length : 0) : 0))\n      .reduce((prev, curr) => prev + curr, 0);\n  const maxGrade = (a: \"F\" | \"B\" | \"A\", b: \"F\" | \"B\" | \"A\") => {\n    const grades = new Map();\n    grades.set(\"F\", 3);\n    grades.set(\"B\", 2);\n    grades.set(\"A\", 1);\n    const orders = new Map();\n    orders.set(3, \"F\");\n    orders.set(2, \"B\");\n    orders.set(1, \"A\");\n    return orders.get(Math.max(grades.get(a), grades.get(b)));\n  };\n  const grades =\n    report.codescan &&\n    report.codescan\n      .filter(Boolean)\n      .map((repo) =>\n        repo ? (repo.alerts ? getCodescanAlertGrade(repo.alerts) : \"A\") : \"A\"\n      );\n\n  if (!grades.length) {\n    return <IconUnknown />;\n  }\n\n  const codescanGrade = grades.reduce(maxGrade);\n  return <Grade small grade={codescanGrade} label={codescanCount} />;\n};\n\nconst UpDownIoUptimeBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.updownio) {\n    return <IconUnknown />;\n  }\n  const updownio = report.updownio && report.updownio.uptime;\n  const updownioGrade = getGradeUpdownio(updownio);\n  return (\n    <Grade small grade={updownioGrade} label={updownio.toFixed() + \" %\"} />\n  );\n};\n\nconst UpDownIoApDexBadge: React.FC<BadgeProps> = ({ report }) => {\n  const apdex =\n    report.updownio && report.updownio.metrics && report.updownio.metrics.apdex;\n  if (apdex === undefined || apdex === null) {\n    return <IconUnknown />;\n  }\n\n  const updownioGrade = apdexToGrade(apdex);\n  return <Grade small grade={updownioGrade} label={apdex} />;\n};\n\ntype SortState = {\n  key: string;\n  order: SortOrder;\n  column: { [column: string]: string };\n};\n\nconst defaultSort = {\n  key: \"url\",\n  order: \"asc\",\n  column: { dataKey: \"url\" },\n} as SortState;\n\nexport const Dashboard: React.FC<DashboardProps> = ({ report }) => {\n  const [sortBy, setSortBy] = useState(defaultSort);\n\n  const onColumnSort = (column: any) => {\n    setSortBy(column);\n  };\n\n  const sortedReport = useMemo(() => {\n    const getSortedRows = (rows: any) => {\n      return orderBy(\n        rows,\n        (row) => {\n          if (sortBy.column.dataGetter) {\n            //@ts-expect-error\n            return sortBy.column.dataGetter({ rowData: row });\n          } else if (sortBy.column.key) {\n            return row[sortBy.column.key];\n          }\n        },\n        sortBy.order\n      );\n    };\n\n    return getSortedRows(report);\n  }, [sortBy, report]);\n\n  const defaultColumnProps = {\n    width: 120,\n    sortable: true,\n    align: \"center\",\n  } as {\n    width: number;\n    sortable: boolean;\n    align: \"center\" | \"left\" | \"right\";\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"calc(100vh - 30px)\" }}>\n      <AutoResizer>\n        {({ width, height }) => (\n          <BaseTable\n            data={sortedReport}\n            width={width}\n            height={height}\n            sortBy={sortBy}\n            onColumnSort={onColumnSort}\n          >\n            <Column\n              key=\"url\"\n              title=\"url\"\n              sortable={true}\n              width={300}\n              flexGrow={1}\n              cellRenderer={({ rowData }) => (\n                <Link\n                  to={`/url/${encodeURIComponent((rowData as UrlReport).url)}`}\n                >\n                  <Search size={16} />\n                  &nbsp;{smallUrl((rowData as UrlReport).url)}\n                </Link>\n              )}\n            />\n            {isToolEnabled(\"lighthouse\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"accessibility\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (\n                    (report &&\n                      report.lhr &&\n                      report.lhr.categories.accessibility.score) ||\n                    0\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Accessibilité\"\n                    info=\"Bonnes pratiques en matière d'accessibilité web (LightHouse)\"\n                    warning={<AccessibilityWarnings />}\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <LightHouseBadge\n                    report={rowData as UrlReport}\n                    category=\"accessibility\"\n                  />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"lighthouse\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"performance\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (report.lhr && getPerformanceScore(report.lhr)) || 0;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Performance\"\n                    info=\"Performances de chargement des pages web (LightHouse)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <LightHouseBadge\n                    report={rowData as UrlReport}\n                    category=\"performance\"\n                  />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"lighthouse\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"seo\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (\n                    (report && report.lhr && report.lhr.categories.seo.score) ||\n                    0\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"SEO\"\n                    info=\"Bonnes pratiques en matière de référencement naturel (LightHouse)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <LightHouseBadge\n                    report={rowData as UrlReport}\n                    category=\"seo\"\n                  />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"testssl\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"ssl\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  const overallGrade =\n                    report.testssl &&\n                    report.testssl.find(\n                      (entry) => entry.id === \"overall_grade\"\n                    );\n                  return overallGrade && letterGradeValue(overallGrade.finding);\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"SSL\"\n                    info=\"Niveau de confiance du certificat SSL (testssl.sh)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <SSLBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"http\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"http\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return report.http && letterGradeValue(report.http.grade);\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"HTTP\"\n                    info=\"Bonnes pratiques de configuration HTTP (Mozilla observatory)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <HTTPBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"updownio\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"updownio\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return report.updownio && report.updownio.uptime;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Disponibilité\"\n                    info=\"Disponibilité du service (updown.io)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <UpDownIoUptimeBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"updownio\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"updownio2\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (\n                    report.updownio &&\n                    report.updownio.metrics &&\n                    report.updownio.metrics.apdex\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"apdex\"\n                    info=\"Apdex: Application Performance Index : indice de satisfaction des attentes de performance (updown.io)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <UpDownIoApDexBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"dependabot\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"dependabot\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  const dependabotCount =\n                    report.dependabot &&\n                    report.dependabot\n                      .filter(Boolean)\n                      .map((repo) => repo.vulnerabilityAlerts.totalCount)\n                      .reduce((prev, curr) => prev + curr, 0);\n                  return dependabotCount;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Vulnérabilités\"\n                    info=\"Vulnérabilités applicatives detectées dans les dépendances du code (dependabot)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <DependabotBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n\n            {isToolEnabled(\"nmap\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"nmap\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  const nmapCount =\n                    report.nmap &&\n                    report.nmap.open_ports\n                      .filter(Boolean)\n                      .map((port) => port.service.vulnerabilities.length)\n                      .reduce((prev, curr) => prev + curr, 0);\n                  return nmapCount;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Nmap\"\n                    info=\"Vulnérabilités réseau detectées par Nmap\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <NmapBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"codescan\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"codescan\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  const codescanCount =\n                    report.codescan &&\n                    report.codescan\n                      .filter(Boolean)\n                      .map((repo) =>\n                        repo ? (repo.alerts ? repo.alerts.length : 0) : 0\n                      )\n                      .reduce((prev, curr) => prev + curr, 0);\n                  return codescanCount;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"CodeQL\"\n                    info=\"Potentielles vulnérabilités ou erreurs detectées dans les codes sources (codescan)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <CodescanBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"thirdparties\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"trackers\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (\n                    report.thirdparties && report.thirdparties.trackers.length\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Trackers\"\n                    info=\"Nombre de scripts externes détectés\"\n                    warning={\n                      <div>\n                        Certains scripts externes légitimes peuvent être\n                        considérés comme trackers.\n                      </div>\n                    }\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <ThirdPartiesTrackersBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"thirdparties\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"cookies\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (\n                    report.thirdparties && report.thirdparties.cookies.length\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Cookies\"\n                    info=\"Nombre de cookies présents\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <ThirdPartiesCookiesBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n          </BaseTable>\n        )}\n      </AutoResizer>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype HTTPProps = { data: HttpReport };\n\nconst HttpRowBadge = (row: HttpTestReport) => {\n  const scoreModifier = row.score_modifier;\n  const variant =\n    scoreModifier < -50\n      ? \"danger\"\n      : scoreModifier < -30\n      ? \"danger\"\n      : scoreModifier < -20\n      ? \"warning\"\n      : scoreModifier < -10\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {scoreModifier}\n    </Badge>\n  );\n};\n\n// some help for remediation\nconst helpDocs = {\n  \"content-security-policy\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://owasp.org/www-community/controls/Content_Security_Policy\"\n      >\n        Doc Content Security Policy\n      </a>\n      . L'extension{\" \"}\n      <a\n        href=\"https://github.com/april/laboratory\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        github.com/april/laboratory\n      </a>{\" \"}\n      permet de générer la CSP pour votre application.\n    </React.Fragment>\n  ),\n  \"x-frame-options\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/fr/docs/Web/HTTP/Headers/X-Frame-Options\"\n      >\n        Doc header X-Frame-Options\n      </a>\n      .\n    </React.Fragment>\n  ),\n  \"strict-transport-security\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security\"\n      >\n        Doc header Strict-Transport-Security (HSTS)\n      </a>\n      .\n    </React.Fragment>\n  ),\n  \"x-content-type-options\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/fr/docs/Web/HTTP/Headers/X-Content-Type-Options\"\n      >\n        Doc header X-Content-Type-Options\n      </a>\n      .\n    </React.Fragment>\n  ),\n  \"x-xss-protection\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection\"\n      >\n        Doc header X-XSS-Protection\n      </a>\n      .\n    </React.Fragment>\n  ),\n  cookies: (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#cookies\"\n      >\n        OWASP Session Management Cheat Sheet\n      </a>\n      .\n    </React.Fragment>\n  ),\n  \"subresource-integrity\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/fr/docs/Web/Security/Subresource_Integrity\"\n      >\n        Doc Subresource Integrity\n      </a>\n      .\n    </React.Fragment>\n  ),\n};\n\nexport const HTTP = ({ data }: HTTPProps) => {\n  if (!data.url) {\n    return null;\n  }\n  const url =\n    (data && `https://observatory.mozilla.org/analyze/${smallUrl(data.url)}`) ||\n    null;\n  const failures = Object.keys(data.details)\n    .filter((key) => !data.details[key].pass)\n    .map((key) => data.details[key]);\n  failures.sort((a, b) => a.score_modifier - b.score_modifier);\n\n  return (\n    (url && (\n      <Panel\n        title=\"HTTP\"\n        info=\"Informations collectées par le Mozilla HTTP observatory\"\n        url={url}\n      >\n        <h3>\n          Scan Summary : <Grade small grade={data.grade} />\n        </h3>\n        <br />\n        {(failures.length && (\n          <React.Fragment>\n            <br />\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th style={{ width: 100 }}>impact</th>\n                  <th>description</th>\n                  <th>documentation</th>\n                </tr>\n              </thead>\n              <tbody>\n                {failures.map((failure, i) => (\n                  <tr key={failure.name + i}>\n                    <td>\n                      <HttpRowBadge {...failure} />\n                    </td>\n                    <td>{failure.score_description}</td>\n                    <td>\n                      {\n                        // @ts-expect-error\n                        helpDocs[failure.name] || \"-\"\n                      }\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </React.Fragment>\n        )) ||\n          null}\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Gauge } from \"./Gauge\";\nimport { Panel } from \"./Panel\";\nimport { getPerformanceScore } from \"../lib/lighthouse/getPerformanceScore\";\nimport { AccessibilityWarnings } from \"../lib/lighthouse/AccessibilityWarnings\";\n\nconst toTime = (ms: number) => {\n  let minutes = 0,\n    seconds = 0;\n  let rest = ms;\n  if (rest > 60 * 1000) {\n    minutes = Math.floor(rest / 60000);\n    rest -= minutes * 60000;\n  }\n  if (rest > 1000) {\n    seconds = Math.floor(rest / 1000);\n    rest -= seconds * 1000;\n  }\n  if (minutes > 0) {\n    return `${minutes}min ${(seconds / 100).toFixed()}s`;\n  }\n  return `${seconds}.${(rest / 100).toFixed()}s`;\n};\n\nconst toSize = (bytes: number) => {\n  const factor = 1000;\n  let mb = 0,\n    kb = 0;\n  let rest = bytes;\n  if (rest > factor * factor) {\n    mb = Math.floor(rest / (factor * factor));\n    rest -= mb * factor * factor;\n  }\n  if (rest > factor) {\n    kb = Math.floor(rest / factor);\n    rest -= kb * factor;\n  }\n  if (mb > 0) {\n    return `${mb}.${(kb / 100).toFixed()}Mb`;\n  }\n  return `${kb}.${(rest / 100).toFixed()}Kb`;\n};\n\ntype LighthouseProps = { data: LighthouseReport; url: string };\n\nexport const LightHouse: React.FC<LighthouseProps> = ({ data, url }) => {\n  if (!data.audits.metrics.details) {\n    return null;\n  }\n\n  const highlights = {\n    \"First contentful Paint\":\n      data.audits.metrics.details &&\n      data.audits.metrics.details.items &&\n      toTime(data.audits.metrics.details.items[0].firstContentfulPaint),\n    \"Time to interactive\":\n      data.audits.metrics.details &&\n      data.audits.metrics.details.items &&\n      toTime(data.audits.metrics.details.items[0].interactive),\n    \"Total requests\":\n      data.audits.diagnostics.details &&\n      data.audits.diagnostics.details.items &&\n      data.audits.diagnostics.details.items[0].numRequests,\n    \"Total weight\":\n      data.audits.diagnostics.details &&\n      data.audits.diagnostics.details.items &&\n      toSize(data.audits.diagnostics.details.items[0].totalByteWeight),\n    // \"Max server Latency\": toTime(\n    //   data.audits.diagnostics.details.items[0].maxServerLatency\n    //   ),\n  } as object;\n\n  const order = [\"accessibility\", \"performance\", \"seo\", \"best-practices\"];\n\n  // use custom scoring\n  data.categories[\"performance\"].score = getPerformanceScore(data);\n\n  return (\n    <Panel\n      title=\"LightHouse\"\n      info=\"Informations collectées par l'outil Google LightHouse\"\n      url={url}\n    >\n      <Row>\n        <Col xs={12}>\n          <AccessibilityWarnings style={{ marginBottom: 20 }} />\n        </Col>\n        {order.map((key, i: number) => {\n          const category = data.categories[key as LighthouseReportCategoryKey];\n          const score = category.score as number;\n          return (\n            (!isNaN(score) && (\n              <Col\n                key={category.title + i}\n                xs={12}\n                md={6}\n                lg={3}\n                className=\"text-center mb-3\"\n              >\n                <Card>\n                  <Gauge\n                    width={100}\n                    height={60}\n                    value={score * 100}\n                    minValue={0}\n                    maxValue={100}\n                    animationSpeed={32}\n                  />\n                  <Card.Body>\n                    <Card.Title>{category.title}</Card.Title>\n                    <Card.Title\n                      style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                    >\n                      {(score * 100).toFixed() + \"%\"}\n                    </Card.Title>\n                  </Card.Body>\n                </Card>\n              </Col>\n            )) ||\n            null\n          );\n        })}\n      </Row>\n      <Row>\n        {Object.keys(highlights).map((label) => {\n          return (\n            <Col xs={12} md={6} lg={3} key={label} className=\"text-center mb-3\">\n              <Card className=\"text-center\">\n                <Card.Body>\n                  <Card.Title style={{ fontSize: \"0.9rem\" }}>\n                    {label}\n                  </Card.Title>\n                  <Card.Title\n                    style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}\n                  >\n                    {/* @ts-expect-error */}\n                    {highlights[label]}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </Panel>\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\n\nconst NucleiBadge = (row: NucleiReportEntry) => {\n  const severity = (row.info && row.info.severity) || \"critical\";\n  const variant =\n    severity === \"critical\"\n      ? \"danger\"\n      : severity === \"high\"\n        ? \"danger\"\n        : severity === \"medium\"\n          ? \"warning\"\n          : severity === \"low\"\n            ? \"info\"\n            : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nconst nucleiSeverities = \"info,low,medium,high,critical\".split(\",\");\n\nconst nucleiOrder = (a: NucleiReportEntry, b: NucleiReportEntry) => (\n  nucleiSeverities.indexOf(a.info.severity) -\n  nucleiSeverities.indexOf(b.info.severity)\n);\n\n\ntype NucleiProps = { data: NucleiReport };\n\nexport const Nuclei: React.FC<NucleiProps> = ({ data }) => {\n  const rows = data;\n  rows.sort(nucleiOrder);\n  return (\n    (rows.length && (\n      <Panel\n        title=\"Nuclei\"\n        info=\"Détection d'erreurs de configuration et vulnérabilités\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }}>severity</th>\n              <th>id</th>\n              <th>name</th>\n              <th>matcher</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((failure: NucleiReportEntry, i: number) => {\n              return (\n                <tr key={failure.templateID + i}>\n                  <td>\n                    <NucleiBadge {...failure} />\n                  </td>\n                  <td>{failure.templateID}</td>\n                  <td>{failure.info.name}</td>\n                  <td>{failure.matcher_name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: ZapReportSiteAlert, b: ZapReportSiteAlert) => {\n  // high criticity first\n  const order = parseInt(b.riskcode) - parseInt(a.riskcode);\n  if (order === 0) {\n    // high confidence first\n    return parseInt(b.confidence) - parseInt(a.confidence);\n  }\n  return order;\n};\n\nconst OwaspBadge = (row: ZapReportSiteAlert) => {\n  const severity = row.riskcode;\n  const variant =\n    severity === \"0\"\n      ? \"info\"\n      : severity === \"1\"\n        ? \"warning\"\n        : severity === \"2\"\n          ? \"danger\"\n          : severity === \"3\"\n            ? \"danger\"\n            : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {row.riskdesc}\n    </Badge>\n  );\n};\n\ntype OwaspProps = { data: ZapReport; url: string };\n\nexport const Owasp: React.FC<OwaspProps> = ({ data, url }) => {\n  const alerts =\n    data && data.site && data.site.flatMap((site) => site.alerts) || [];\n  alerts.sort(orderBySeverity);\n  return (\n    (alerts.length && (\n      <Panel\n        title=\"OWASP\"\n        url={url}\n        info=\"Scan de vulnérabiliés OWASP baseline\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                risk/confidence\n              </th>\n              <th>name</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert, i: number) => {\n              return (\n                <tr key={alert.name + i}>\n                  <td className=\"text-center\">\n                    <OwaspBadge {...alert} />\n                  </td>\n                  <td>{alert.name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Row, Col, Alert } from \"react-bootstrap\";\nimport { Info } from \"react-feather\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\n\nconst sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\nconst severities = [\"INFO\", \"OK\", \"LOW\", \"MEDIUM\", \"HIGH\", \"CRITICAL\"];\nconst getSeverityValue = (severity: string) => severities.indexOf(severity);\n\ntype SSLProps = { data: SslTestReport; url: string };\n\nexport const TestSSL: React.FC<SSLProps> = ({ data, url }) => {\n  const gradeEntry = data.find((entry) => entry.id === \"overall_grade\")\n  const grade =\n    data && gradeEntry && gradeEntry.finding;\n  const results = data.map((entry) => ({\n    ...entry,\n    severity_value: getSeverityValue(entry.severity), // add property for sort\n  }));\n  results.sort(sortByKey(\"severity_value\")).reverse();\n  const capReasons = data.filter((entry) => entry.id.indexOf('grade_cap_reason_') === 0).reverse();\n  return grade && (\n    <Panel title=\"SSL\" info=\"Informations collectées via testssl.sh\" url={url}>\n      <Row>\n        <Col>\n          <h3>\n            Scan Summary : <Grade small grade={grade} />\n          </h3>\n          <br />\n          {capReasons.map((reason: any, i: number) => {\n            return <Alert key={reason.id + i} variant=\"info\"><Info style={{ marginRight: 5 }} />{reason.finding}</Alert>\n          })}\n        </Col>\n      </Row>\n    </Panel>\n  ) || null\n};\n","import * as React from \"react\";\n\nimport { Alert, Table } from \"react-bootstrap\";\nimport Flags from \"country-flag-icons/react/3x2\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\n\ntype TrackersProps = { data: ThirdPartiesReport };\n\ntype CookiesTableProps = { cookies: ThirdPartiesReportCookies };\n\nconst CookiesTable: React.FC<CookiesTableProps> = ({ cookies }) =>\n  (cookies && cookies.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={4}>\n            Cookies\n          </th>\n        </tr>\n        <tr>\n          <th>name</th>\n          <th>domain</th>\n          <th className=\"text-center\">httpOnly</th>\n          <th className=\"text-center\">secure</th>\n        </tr>\n      </thead>\n      <tbody>\n        {cookies.map((cookie, i: number) => (\n          <tr key={cookie.name + \"\" + i}>\n            <td>{cookie.name}</td>\n            <td>{cookie.domain}</td>\n            <td className=\"text-center\">{cookie.httpOnly ? \"✔️\" : \"❌\"}</td>\n            <td className=\"text-center\">{cookie.secure ? \"✔️\" : \"❌\"}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nconst smallLinkify = (url: string) => (\n  <a href={url}>{smallUrl(url).substring(0, 25) + \"...\"}</a>\n);\n\ntype TrackersTableProps = { trackers: ThirdPartiesReportTrackers };\n\nconst TrackersTable: React.FC<TrackersTableProps> = ({ trackers }) =>\n  (trackers && trackers.length && (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={3}>\n            Third-parties ressources\n          </th>\n        </tr>\n        <tr>\n          <th>type</th>\n          <th>url</th>\n          <th>remédiation</th>\n        </tr>\n      </thead>\n      <tbody>\n        {trackers.map((tracker, i: number) => {\n          return (\n            <tr key={tracker.url + i}>\n              <td>{tracker.type}</td>\n              <td>{smallLinkify(tracker.url)}</td>\n              <td>{tracker.details && tracker.details.message}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\ntype EndPointsTableProps = { endpoints: ThirdPartiesReportEndpoints };\n\nconst EndPointsTable: React.FC<EndPointsTableProps> = ({ endpoints }) =>\n  (endpoints && endpoints.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th style={{ width: 100 }}>Flag</th>\n          <th>Hostname</th>\n          <th>IP</th>\n          <th>City</th>\n          <th>Country</th>\n        </tr>\n      </thead>\n      <tbody>\n        {endpoints.map((endpoint, i: number) => {\n          const Flag =\n            (endpoint.geoip &&\n              endpoint.geoip.country &&\n              Flags[endpoint.geoip.country.iso_code]) ||\n            null;\n          return (\n            <tr key={endpoint.hostname + \"-\" + endpoint.ip}>\n              <td className=\"text-center\">\n                {Flag && endpoint.geoip && endpoint.geoip.country && (\n                  <Flag\n                    style={{ width: 60 }}\n                    title={endpoint.geoip.country.names.fr}\n                  />\n                )}\n              </td>\n              <td>{endpoint.hostname}</td>\n              <td>{endpoint.ip}</td>\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.city &&\n                  endpoint.geoip.city.names.fr) ||\n                  \"?\"}\n              </td>\n\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.country &&\n                  endpoint.geoip.country.names.fr) ||\n                  \"?\"}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nexport const Trackers: React.FC<TrackersProps> = ({ data }) => {\n  const hasIssues = [];\n  if (data.cookies && data.cookies.length) {\n    hasIssues.push(...data.cookies);\n  }\n  if (data.trackers && data.trackers.length) {\n    hasIssues.push(...data.trackers);\n  }\n  return (\n    (hasIssues.length && (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <CookiesTable cookies={data.cookies} />\n        <TrackersTable trackers={data.trackers} />\n        <EndPointsTable endpoints={data.endpoints} />\n      </Panel>\n    )) || (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <Alert variant=\"success\">Aucun script third-party detecté</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\n\ntype WappalyzerProps = { data: WappalyzerReport };\n\nexport const Wappalyzer: React.FC<WappalyzerProps> = ({ data }) => {\n    return (\n        (data && (\n            <Panel\n                title=\"Wappalyzer\"\n                info=\"Détection des technologies\"\n            >\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th style={{ width: 250 }}>\n                                name\n                            </th>\n                            <th>categories</th>\n                            <th>website</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.technologies && data.technologies.map((techno: any, i: number) => {\n                            return (\n                                <tr key={techno.name + i}>\n                                    <td>\n                                        {techno.name}\n                                    </td>\n                                    <td>{techno.categories && techno.categories.map((cat: any) => cat.name).join(\", \")}</td>\n                                    <td><a href={techno.website} target=\"_blank\" rel=\"nopoener noreferrer\">{techno.website}</a></td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Panel>\n        )) ||\n        null\n    );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\nimport { getLastUrlSegment } from \"../utils\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: DependabotNode, b: DependabotNode) => {\n  // high criticity first\n  const severities = new Map();\n  severities.set(\"CRITICAL\", 3);\n  severities.set(\"HIGH\", 2);\n  severities.set(\"MODERATE\", 1);\n  severities.set(\"LOW\", 0);\n  return (\n    severities.get(b.securityVulnerability.severity) -\n    severities.get(a.securityVulnerability.severity)\n  );\n};\n\nconst DependabotBadge = (node: DependabotNode) => {\n  const severity = node.securityVulnerability.severity;\n  const variant =\n    severity === \"LOW\"\n      ? \"info\"\n      : severity === \"MODERATE\"\n      ? \"warning\"\n      : severity === \"HIGH\"\n      ? \"danger\"\n      : severity === \"CRITICAL\"\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\ntype DependabotProps = { data: DependabotRepository; url: string };\n\nexport const Dependabot: React.FC<DependabotProps> = ({ data, url }) => {\n  const nodes =\n    data && data.vulnerabilityAlerts.totalCount > 0\n      ? data.vulnerabilityAlerts.nodes\n      : [];\n  data.vulnerabilityAlerts.nodes.sort(orderBySeverity);\n  return (\n    (data.vulnerabilityAlerts.totalCount > 0 && (\n      <Panel\n        title=\"Dependabot\"\n        url={data.url + '/security/dependabot'}\n        info={\n          <span>\n            Scan des vulnérabiliés du dépôt Github{\" \"}\n            <a\n              style={{ color: \"white\" }}\n              href={data.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {data.url}\n            </a>\n          </span>\n        }\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                Sévérité\n              </th>\n              <th>Dépendance vulnérable</th>\n              <th>Vulnérabilités</th>\n            </tr>\n          </thead>\n          <tbody>\n            {nodes.map((node, i: number) => {\n              return (\n                <tr key={node.securityVulnerability.package.name + i}>\n                  <td className=\"text-center\">\n                    <DependabotBadge {...node} />\n                  </td>\n                  <td>{node.securityVulnerability.package.name}</td>\n                  <td>\n                    {node.securityVulnerability.advisory.references.map(\n                      (reference, i: number) => {\n                        return (\n                          <p key={getLastUrlSegment(reference.url) + i}>\n                            <a target=\"_blank\" href={reference.url} rel=\"noopener noreferrer\">\n                              {getLastUrlSegment(reference.url)}\n                            </a>\n                            <br />\n                          </p>\n                        );\n                      }\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: CodescanAlert, b: CodescanAlert) => {\n  // high criticity first\n  const severities = new Map();\n  severities.set(\"error\", 1);\n  severities.set(\"warning\", 0);\n  return (\n    severities.get(b.rule.severity) -\n    severities.get(a.rule.severity)\n  );\n};\n\nconst CodescanBadge = (alert: CodescanAlert) => {\n  const severity = alert.rule.severity;\n  const variant =\n      severity === \"warning\"\n      ? \"warning\"\n      : severity === \"error\"\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\ntype CodescanProps = { data: CodescanRepository; url: string };\n\nexport const Codescan: React.FC<CodescanProps> = ({ data, url }) => {\n  const alerts =\n    data && data.alerts.length > 0\n      ? data.alerts\n      : [];\n  alerts.sort(orderBySeverity);\n  return (\n    (alerts.length > 0 && (\n      <Panel\n        title=\"Codescan\"\n        url={data.url + '/security/code-scanning'}\n        info={\n          <span>\n            Scan du code du dépôt Github{\" \"}\n            <a\n              style={{ color: \"white\" }}\n              href={data.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {data.url}\n            </a>\n          </span>\n        }\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                Sévérité\n              </th>\n              <th>Règle</th>\n              <th>Descritpion</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert, i: number) => {\n              return (\n                <tr key={alert.rule.name + i}>\n                  <td className=\"text-center\">\n                    <CodescanBadge {...alert} />\n                  </td>\n                  <td>{alert.rule.name}</td>\n                  <td>\n                    <a target=\"_blank\" href={alert.html_url} rel=\"noopener noreferrer\">\n                      {alert.rule.description}\n                    </a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst sumCvss = (total: number, vulnerability: NmapVulnerability) => {\n   return total + Number.parseFloat(vulnerability.cvss);\n}\n\nconst orderByCvss = (a: NmapOpenPort, b: NmapOpenPort) => {\n  return b.service.vulnerabilities.reduce(sumCvss, 0) - a.service.vulnerabilities.reduce(sumCvss, 0);\n};\n\nconst hasExploit = (open_port: NmapOpenPort) => {\n  return open_port.service.vulnerabilities.filter((vulnerability) => vulnerability.is_exploit).length > 0;\n};\n\nconst NmapBadge = (open_port: NmapOpenPort) => {\n  const max = open_port.service.vulnerabilities.reduce(sumCvss, 0);\n  const variant =\n  !hasExploit(open_port) && max > 5 * open_port.service.vulnerabilities.length\n      ? \"warning\" :\n      hasExploit(open_port) && max > 5 * open_port.service.vulnerabilities.length\n        ? \"danger\"\n        : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {open_port.service.vulnerabilities.length}\n    </Badge>\n  );\n};\n\ntype NmapProps = { data: NmapReport; };\n\nexport const Nmap: React.FC<NmapProps> = ({ data }) => {\n  const open_ports =\n    data && data.open_ports.length > 0\n      ? data.open_ports\n      : [];\n  data.open_ports.sort(orderByCvss);\n  return (\n    (data.open_ports.length > 0 && (\n      <Panel\n        title=\"Nmap\"\n        url={'https://' + data.host}\n        info={\n          <span>\n            Scan des vulnérabiliés nmap {\" \"}\n            <a\n              style={{ color: \"white\" }}\n              href={'https://' + data.host}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {'https://' + data.host}\n            </a>\n          </span>\n        }\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                Sévérité\n              </th>\n              <th>Service vulnérable</th>\n              <th>Vulnérabilités</th>\n            </tr>\n          </thead>\n          <tbody>\n            {open_ports.map((open_port, i: number) => {\n              return (\n                <tr key={open_port.service.name + i}>\n                  <td className=\"text-center\">\n                    <NmapBadge {...open_port} />\n                  </td>\n                  <td>{open_port.service.name + ' (port:' + open_port.service.id + ')'}</td>\n                  <td>\n                    {open_port.service.vulnerabilities.map(\n                      (vulnerability, i: number) => {\n                        return (\n                          <p key={vulnerability.id + i}>\n                            <a target=\"_blank\" href={'https://vulners.com/cve/' + vulnerability.id} rel=\"noopener noreferrer\">\n                              {vulnerability.id}\n                            </a>\n                            <br />\n                          </p>\n                        );\n                      }\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};","import * as React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport frLocale from \"date-fns/locale/fr\";\nimport { Link } from \"react-router-dom\";\nimport { Clock } from \"react-feather\";\nimport { Jumbotron, Badge } from \"react-bootstrap\";\n\nimport { isToolEnabled } from \"../utils\";\nimport { HTTP } from \"./HTTP\";\nimport { LightHouse } from \"./LightHouse\";\nimport { Nuclei } from \"./Nuclei\";\nimport { Owasp } from \"./Owasp\";\nimport { TestSSL } from \"./TestSSL\";\nimport { Trackers } from \"./Trackers\";\nimport { Wappalyzer } from \"./Wappalyzer\";\nimport { UpdownIo } from \"./UpdownIo\";\nimport { Dependabot } from \"./Dependabot\";\nimport { Codescan } from \"./Codescan\";\nimport { Nmap } from \"./Nmap\";\n\ntype UrlDetailProps = { url: string; report: UrlReport };\n\nexport const Url: React.FC<UrlDetailProps> = ({ url, report, ...props }) => {\n  const updateDate = report && report.lhr && report.lhr.fetchTime;\n  if (!report) {\n    return <div>No data available for {url}</div>;\n  }\n  return (\n    <div>\n      <Jumbotron\n        style={{\n          height: 100,\n          marginTop: 10,\n          paddingTop: 20,\n          marginBottom: 10,\n          display: \"flex\",\n        }}\n      >\n        <div style={{ flex: \"1 0 auto\" }}>\n          <h4>\n            <a href={url} rel=\"noreferrer noopener\" target=\"_blank\">\n              {url}\n            </a>\n          </h4>\n          <p>\n            {report.category && (\n              <Link to={`/category/${report.category}`}>\n                <Badge style={{ marginRight: 5 }} variant=\"success\">\n                  {report.category}\n                </Badge>\n              </Link>\n            )}\n            {report.tags &&\n              report.tags.map((tag: string) => (\n                <Link key={tag} to={`/tag/${tag}`}>\n                  <Badge style={{ marginRight: 5 }} variant=\"info\">\n                    {tag}\n                  </Badge>\n                </Link>\n              ))}\n            {updateDate && (\n              <span title={updateDate}>\n                <Clock size={12} style={{ marginRight: 5 }} />\n                Mise à jour il y a :{\" \"}\n                {formatDistanceToNow(new Date(updateDate), {\n                  locale: frLocale,\n                })}\n              </span>\n            )}\n          </p>\n        </div>\n        <div style={{ flex: \"0 0 100px\", marginTop: -10 }}>\n          {report.screenshot && (\n            <a href={url} rel=\"noreferrer noopener\" target=\"_blank\">\n              <img\n                style={{\n                  position: \"relative\",\n                  top: 0,\n                  maxHeight: 80,\n                  border: \"1px solid var(--dark)\",\n                }}\n                src={`${process.env.PUBLIC_URL}/report/${window.btoa(\n                  url\n                )}/screenshot.png`}\n              />\n            </a>\n          )}\n        </div>\n      </Jumbotron>\n      {(isToolEnabled(\"lighthouse\") && report.lhr && (\n        <React.Fragment>\n          <LightHouse\n            data={report.lhr}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/lhr.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"dependabot\") && report.dependabot && (\n        <React.Fragment>\n          {report.dependabot.filter(Boolean).map((repository) => {\n            return (\n              <Dependabot key={repository.url} data={repository} url={url} />\n            );\n          })}\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"codescan\") && report.codescan && (\n        <React.Fragment>\n          {report.codescan.filter(Boolean).map((repository) => {\n            return (\n              <Codescan key={repository.url} data={repository} url={url} />\n            );\n          })}\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"updownio\") && report.updownio && (\n        <React.Fragment>\n          <UpdownIo data={report.updownio} url={url} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"testssl\") && report.testssl && (\n        <React.Fragment>\n          <TestSSL\n            data={report.testssl}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/testssl.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"nmap\") && report.nmap && (\n        <React.Fragment>\n          <Nmap data={report.nmap} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"http\") && report.http && (\n        <React.Fragment>\n          <HTTP data={report.http} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"thirdparties\") && report.thirdparties && (\n        <React.Fragment>\n          <Trackers data={report.thirdparties} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"zap\") && report.zap && (\n        <React.Fragment>\n          <Owasp\n            data={report.zap}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/zap.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"nuclei\") && report.nuclei && (\n        <React.Fragment>\n          <Nuclei data={report.nuclei} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"wappalyzer\") && report.wappalyzer && (\n        <React.Fragment>\n          <Wappalyzer data={report.wappalyzer} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Button, Jumbotron, Alert } from \"react-bootstrap\";\nimport { AlertTriangle, Info } from \"react-feather\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { isToolEnabled } from \"../utils\";\n\nimport { Panel } from \"./Panel\";\n\nconst dashlordConfig: DashlordConfig  = require(\"../config.json\");\n\nexport const Intro: React.FC = () => {\n  return (\n    <div>\n      <br />\n      <Jumbotron style={{ padding: \"2em\" }}>\n        <h1>{dashlordConfig.title || \"DashLord\"}</h1>\n        <br />\n        Le tableau de bord aggrège les données issues de plusieurs\n        outils qui évaluent chaque URL indépendamment.\n        <br />\n        <br />\n        L'évaluation des outils ne remplace en aucun cas une expertise manuelle,\n        et seule la page d'accueil du site est ici évaluée.\n        <br />\n        <br />\n        Vous pouvez soumettre de nouvelles URLs, proposer des corrections ou\n        consulter la roadmap en{\" \"}\n        <a\n          href=\"https://github.com/SocialGouv/dashlord/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          cliquant ici\n        </a>\n        .\n        <br /><br />\n        <br />\n        <Link to=\"/dashboard\">\n          <Button variant=\"dark\">Accéder au tableau de bord</Button>\n        </Link>\n      </Jumbotron>\n\n      {isToolEnabled(\"lighthouse\") && <Panel title=\"Google Lighthouse\">\n        Permet un audit automatique de page web :\n        <br />\n        <br />\n        <li>Performances de chargement</li>\n        <li>Bonnes pratiques SEO (référencement)</li>\n        <li>Bonnes pratiques accessibilité (moteur Axe)</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Les mesures de performance, sont un instantané, donc pas forcément\n          représentatives\n          <br />\n          <AlertTriangle size={16} style={{ marginRight: 5 }} /> Les mesures\n          d'accessibilité n'abordent pas du tout{\" \"}\n          <a\n            href=\"https://www.numerique.gouv.fr/publications/rgaa-accessibilite/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            le RGAA\n          </a>\n          .\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://developers.google.com/web/tools/lighthouse\"\n        >\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"dependabot\") && <Panel title=\"Dependabot\">\n        Recense les vulnérabilités de tes dépendances dans ton code\n        <br />\n        <br />\n        <li>Scan des vulnérabilités de tes dépendances sur le dépôt Github du code</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://dependabot.com/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://docs.github.com/en/code-security/supply-chain-security/about-alerts-for-vulnerable-dependencies\"\n        >\n          Security scans\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"codescan\") && <Panel title=\"Codescan\">\n        Recense les potentielles vulnérabilités dans ton code\n        <br />\n        <br />\n        <li>Scan des potentielles vulnérabilités sur le dépôt Github du code</li>\n        <li>Possibilité d'activer autant de scanner souhaité: CodeQL, etc</li>\n        <li>Liste restreinte de langages couverts: C/C++, C#, Go, Java, JavaScript/TypeScript, Python</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://docs.github.com/en/code-security/secure-coding/about-code-scanning\">\n          Documentation\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"nmap\") && <Panel title=\"Nmap\">\n        Nmap scan les vulnérabilités d'une machine (IP) associée à un domaine\n        <br />\n        <br />\n        <li>Scan des ports ouverts avec vulnérabilités grâce au script vulners</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://nmap.org\"\n          style={{ marginLeft: 5 }}>\n          Nmap\n        </Button>\n        <Button variant=\"dark\" href=\"https://nmap.org/nsedoc/scripts/vulners.html\">\n          NSE vulners\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"zap\") && <Panel title=\"OWASP Zed Attack Proxy\">\n        Scan de vulnérabilités passif \"baseline\" qui permet de détecter des\n        risques de sécurité.\n        <br />\n        <br />\n        <li>Bonnes pratiques web</li>\n        <li>Bonnes pratiques http</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://www.zaproxy.org/docs/docker/baseline-scan/\"\n        >\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"testssl\") && <Panel title=\"testssl.sh\">\n        Évalue le niveau de confiance d'un certificat SSL\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Protocoles disponibles</li>\n        <li>Compatibilité navigateurs</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <br />\n        <Button variant=\"dark\" href=\"https://testssl.sh/\">\n          Site officiel\n        </Button>\n        &nbsp;\n        <Button variant=\"dark\" href=\"https://github.com/drwetter/testssl.sh\">\n          Code source\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"http\") && <Panel title=\"Mozilla HTTP observatory\">\n        Évalue le niveau de qualité/sécurité de la page web et de son serveur\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Bonnes pratiques web</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://observatory.mozilla.org/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://github.com/mozilla/http-observatory/blob/master/httpobs/docs/scoring.md\"\n        >\n          Méthodologie\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"updownio\") && <Panel title=\"Updown.io\">\n        Évalue les temps de réponse de son serveur\n        <br />\n        <br />\n        <li>Disponibilité du site web avec calcul régulier de l'APDEX</li>\n        <li>Validité des certificats TLS</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://updown.io/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://updown.uservoice.com/knowledgebase/articles/915588-what-is-apdex\"\n        >\n          APDEX\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"nuclei\") && <Panel title=\"Nucléi\">\n        Détecte plus de 700 erreurs de configuration courantes sur les\n        applications webs.\n        <br />\n        <br />\n        <li>Sécurité</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://nuclei.projectdiscovery.io/\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"thirdparties\") && <Panel title=\"Third-parties\">\n        Liste tous les scripts externes chargés par une URL et qui peuvent avoir\n        un impact sur :\n        <br />\n        <br />\n        <li>Performances web</li>\n        <li>Sécurité</li>\n        <li>Vie privée</li>\n        <br />\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Certains script légitimes peuvent apparaitre dans cette catégorie\n          s'ils sont hébergés sur d'autres serveurs\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://github.com/SocialGouv/thirdparties\"\n        >\n          Code source\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"thirdparties\") && <Panel title=\"GeoIP2\">\n        Géolocalise tous les serveurs contactés lors de l'ouverture d'une URL.\n        <br />\n        <br />\n        <li>Vie privée</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.maxmind.com/en/geoip-demo\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"wappalyzer\") && <Panel title=\"Wappalyzer\">\n        Wappalyzer reconnait +1500 technologies web, Javascript, CMS, outillage...\n        <br />\n        <br />\n        <li>Stack technique</li>\n        <li>Obsolescence</li>\n        <li>Parc</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.wappalyzer.com/\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import * as React from \"react\";\n\nimport { Jumbotron } from \"react-bootstrap\";\n\n\n\nexport const About: React.FC = () => {\n    return (\n        <div>\n            <br />\n            <Jumbotron style={{ padding: \"2em\", textAlign: \"center\" }}>\n                <h1>À propos</h1>\n            </Jumbotron>\n            <div style={{ margin: '0 auto', maxWidth: '80%' }}>\n                <br />\n                  DashLord est <strong>100% open source</strong>, vous pouvez y contribuer en créant de la documentation, en proposant du code, ou encore en partageant vos questions <a href=\"https://github.com/socialgouv/dashlord\" target=\"_blank\" rel=\"noopener noreferrer\">sur le repository github</a>.\n\n               < br /> <br />\n\n                 L'objectif de DashLord est d'identifier des points d'attention mais aussi de proposer des solutions actionnables.\n                 < br /> <br />\n\n                 DashLord est né à la <a href=\"https://fabrique.social.gouv.fr\" target=\"_blank\" rel=\"noopener noreferrer\" > Fabrique des ministères sociaux</a > pour répondre aux besoins d'évaluation et de mise en oeuvre des bonnes pratiques de développement web.\n                  < br /> <br />\n                Vous pouvez facilement créer votre propre DashLord pour vos URLs en suivant <a href=\"https://github.com/SocialGouv/dashlord/blob/main/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">les instructions sur le GitHub</a>.\n            </div>\n        </div >\n    );\n};\n","import * as React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nimport { Jumbotron, CardColumns } from \"react-bootstrap\";\nimport uniq from \"lodash.uniq\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Panel } from \"./Panel\";\n\ntype UsageChartProps = { data: any };\n\nconst UsageChart: React.FC<UsageChartProps> = ({ data }) => {\n  return (\n      <BarChart\n        width={300}\n        height={200}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#82ca9d\" />\n      </BarChart>\n  );\n};\n\nconst toChartData = (category: WappalyzerParsedCategory) =>\n  category.items.map((item) => ({\n    name: item.name,\n    count: item.urls.length,\n  }));\n\ntype WappalyzerDashboardProps = { report: DashLordReport };\n\ntype WappalyzerParsedCategory = {\n  name: string;\n  items: {\n    name: string;\n    website: string | undefined;\n    urls: string[];\n  }[];\n};\n\nconst getCategoriesByUrl = (report: DashLordReport) => {\n  const allTechnologies = report\n    .flatMap((url) => ({ url, wappalyzer: url.wappalyzer }))\n    .filter(({ url, wappalyzer }) => !!wappalyzer)\n    .flatMap(\n      ({ url, wappalyzer }) =>\n        (wappalyzer &&\n          wappalyzer.technologies.map((details) => ({\n            ...details,\n            url: url.url,\n          }))) ||\n        []\n    );\n  const categoriesNames = uniq(\n    allTechnologies.flatMap(\n      (t) => t.categories && t.categories.map((c) => c.name)\n    )\n  );\n\n  const getTechUrl = (name: string) =>\n    allTechnologies.find((t) => t.name === name)?.website;\n\n  const categories = categoriesNames.map((name) => {\n    const categoryTechs = allTechnologies.filter(\n      (t) => t.categories && t.categories.find((c) => c.name === name)\n    );\n\n    // group techs by name and sort by count desc\n    const byTech = categoryTechs.reduce((a, t) => {\n      if (!a[t.name]) {\n        a[t.name] = [];\n      }\n      a[t.name].push(t.url);\n      return a;\n    }, {} as Record<string, any>);\n\n    const sortedTechs = Object.keys(byTech)\n      .map((name) => ({\n        name,\n        website: getTechUrl(name),\n        urls: byTech[name] as string[],\n      }))\n      .sort((a, b) => a.urls.length - b.urls.length)\n      .reverse();\n\n    return {\n      name,\n      items: sortedTechs,\n    };\n  });\n\n  return categories;\n};\n\nexport const WappalyzerDashboard = ({ report }: WappalyzerDashboardProps) => {\n  const categories = getCategoriesByUrl(report);\n  return (\n    <div>\n      <br />\n      <Jumbotron style={{ padding: \"2em\" }}>\n        <h1>Wappalyzer : technologies détectées</h1>\n      </Jumbotron>\n      <CardColumns>\n        {categories.map((category) => (\n          <Panel key={category.name} title={category.name}>\n            <UsageChart data={toChartData(category)} />\n            <br/>\n            {category.items.map((item) => (\n              <div key={item.name}>\n                <b>\n                  <a\n                    href={item.website}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {item.name} ({item.urls.length})\n                  </a>\n                </b>\n                <ul>\n                  {item.urls.map((url) => (\n                    <li key={url}>\n                      <Link to={`/url/${url}`}>{url}</Link>\n                    </li>\n                  ))}\n                </ul>\n                <br />\n              </div>\n            ))}\n          </Panel>\n        ))}\n      </CardColumns>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Container, Row, Alert } from \"react-bootstrap\";\n\nimport {\n  useParams,\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { Sidebar } from \"./components/Sidebar\";\nimport { Topbar } from \"./components/Topbar\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Url } from \"./components/Url\";\nimport { Intro } from \"./components/Intro\";\nimport { ScrollToTop } from  \"./components/ScrollToTop\";\nimport { About } from \"./components/About\";\nimport { WappalyzerDashboard } from \"./components/WappalyzerDashboard\";\n\nconst report: DashLordReport = require(\"./report.json\");\n\ntype CategoryRouteProps = { report: DashLordReport };\n\n// for some reason react-router `:url*` didnt work, use `*` only\ninterface CategoryParamTypes {\n  category: string;\n}\n\nconst CategoryRoute: React.FC<CategoryRouteProps> = (props) => {\n  const params = useParams<CategoryParamTypes>();\n  const category = window.decodeURIComponent(params.category);\n  const urls = props.report.filter((u) => u.category === category)\n  return (\n    <React.Fragment>\n      <br />\n      <h3>{category} : {urls.length} urls</h3>\n      <Dashboard report={urls} />\n    </React.Fragment>\n  );\n};\n\ninterface TagParamTypes {\n  tag: string;\n}\n\ntype TagRouteProps = { report: DashLordReport };\n\nconst TagRoute: React.FC<TagRouteProps> = (props) => {\n  const params = useParams<TagParamTypes>();\n  const tag = window.decodeURIComponent(params.tag);\n  const urls = props.report.filter((u) => u.tags && u.tags.includes(tag))\n  return (\n    <React.Fragment>\n      <br />\n      <h3>{tag} : {urls.length} urls</h3>\n      <Dashboard report={urls} />\n    </React.Fragment>\n  );\n};\n\ninterface UrlParamTypes {\n  \"0\": string;\n}\n\ntype UrlRouteProps = { report: DashLordReport };\n\nconst UrlRoute: React.FC<UrlRouteProps> = (props) => {\n  const params = useParams<UrlParamTypes>();\n  const url = window.decodeURIComponent(params[\"0\"]);\n  const urlData = props.report.find((u) => u.url === url);\n  if (!urlData) {\n    return <Alert variant=\"danger\">Impossible de trouver le rapport pour {url}</Alert>\n  }\n  return <Url url={url} report={urlData} />\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <ScrollToTop />\n        <Topbar />\n        <Container fluid>\n          <Row>\n            <Sidebar report={report} />\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n              <Switch>\n                <Route path=\"/url/*\">\n                  <UrlRoute report={report} />\n                </Route>\n                <Route path=\"/dashboard\">\n                  <Dashboard report={report} />\n                </Route>\n                <Route path=\"/category/:category\">\n                  <CategoryRoute report={report} />\n                </Route>\n                <Route path=\"/tag/:tag\">\n                  <TagRoute report={report} />\n                </Route>\n                <Route path=\"/wappalyzer\">\n                  <WappalyzerDashboard report={report} />\n                </Route>\n                <Route path=\"/intro\">\n                  <Intro />\n                </Route>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route path=\"/\">\n                  <Dashboard report={report} />\n                </Route>\n              </Switch>\n            </main>\n          </Row>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"./bootstrap-theme.scss\";\nimport \"./custom.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}