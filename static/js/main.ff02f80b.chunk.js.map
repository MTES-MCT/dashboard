{"version":3,"sources":["utils.ts","components/Sidebar.tsx","components/Topbar.tsx","components/Grade.tsx","lib/lighthouse/getPerformanceScore.ts","lib/lighthouse/AccessibilityWarnings.tsx","components/Dashboard.tsx","components/Panel.tsx","components/HTTP.tsx","components/Gauge.tsx","components/LightHouse.tsx","components/Nuclei.tsx","components/Owasp.tsx","components/TestSSL.tsx","components/Trackers.tsx","components/Wappalyzer.tsx","components/UpdownIo.tsx","components/Dependabot.tsx","components/Codescan.tsx","components/Url.tsx","components/Intro.tsx","components/ScrollToTop.tsx","components/About.tsx","components/WappalyzerDashboard.tsx","App.tsx","index.tsx"],"names":["smallUrl","url","toLowerCase","replace","getLastUrlSegment","substring","lastIndexOf","isToolEnabled","name","dashlordConfig","require","tools","length","includes","letterGradeValue","grade","A","B","C","D","E","F","Sidebar","key","report","sortedReport","sort","a","b","categories","uniq","filter","u","category","map","Nav","className","to","activeClassName","exact","size","style","marginTop","marginRight","whiteSpace","Topbar","Navbar","variant","bg","sticky","expand","justifyContent","height","fontSize","color","title","grades","Grade","label","small","newGrade","toUpperCase","Badge","minWidth","undefined","getPerformanceScore","firstContentfulPaint","audits","metrics","details","items","numRequests","diagnostics","totalByteWeight","maxByteWeight","score","Math","min","max","AccessibilityWarnings","scoreToGrade","x1","x2","split","floor","IconUnknown","ColumnHeader","info","warning","textAlign","placement","trigger","overlay","maxWidth","cursor","stroke","marginLeft","LightHouseBadge","lhrCategories","lhr","value","toFixed","SSLBadge","overallGrade","testssl","find","entry","id","finding","HTTPBadge","http","ZapBadge","owaspAlerts","zap","site","flatMap","alerts","riskcode","owaspCount","owaspGrade","maxSeverity","o","parseInt","getOwaspGrade","ThirdPartiesTrackersBadge","thirdparties","count","trackersCount","trackers","trackersGrade","ThirdPartiesCookiesBadge","cookiesCount","cookies","cookiesGrade","NucleiBadge","nuclei","events","nucleiCount","nucleiGrade","n","severity","DependabotBadge","dependabot","dependabotCount","Boolean","repo","vulnerabilityAlerts","totalCount","reduce","prev","curr","nodes","securityVulnerability","dependabotGrade","Map","set","orders","get","CodescanBadge","codescan","codescanCount","rule","codescanGrade","UpDownIoBadge","updownio","uptime","updownioGrade","defaultSort","order","column","dataKey","Dashboard","useState","sortBy","setSortBy","onColumnSort","useMemo","rows","orderBy","row","dataGetter","rowData","defaultColumnProps","width","sortable","align","data","flexGrow","cellRenderer","encodeURIComponent","accessibility","headerRenderer","seo","Panel","children","Card","marginBottom","Title","background","padding","fontWeight","float","href","target","rel","Body","HttpRowBadge","abs","score_modifier","HTTP","failures","Object","keys","pass","Table","striped","bordered","hover","failure","i","score_description","Gauge","props","canvas","useRef","span","gauge","useEffect","current","donut","Donut","CanvasGauge","setTextField","setOptions","options","maxValue","setMinValue","minValue","animationSpeed","textChangeHandler","passThroughProps","ref","display","defaultProps","percentColors","angle","lineWidth","radiusScale","pointer","strokeWidth","strokeColor","generateGradient","highDpiSupport","toTime","ms","minutes","seconds","rest","toSize","bytes","factor","mb","kb","LightHouse","highlights","interactive","Row","Col","xs","md","lg","nucleiSeverities","nucleiOrder","indexOf","Nuclei","templateID","matcher_name","orderBySeverity","confidence","OwaspBadge","riskdesc","Owasp","alert","severities","TestSSL","gradeEntry","severity_value","reverse","capReasons","reason","Alert","CookiesTable","colSpan","cookie","domain","httpOnly","secure","TrackersTable","tracker","type","message","EndPointsTable","endpoints","endpoint","Flag","geoip","country","Flags","iso_code","names","fr","hostname","ip","city","Trackers","hasIssues","push","Wappalyzer","technologies","techno","cat","join","website","UpdownIo","urlUpdownio","token","ssl","valid","format","Date","expires_at","locale","frLocale","node","Dependabot","package","advisory","references","reference","Codescan","html_url","description","Url","updateDate","fetchTime","Jumbotron","paddingTop","tags","tag","formatDistanceToNow","process","window","btoa","repository","wappalyzer","Intro","Button","ScrollToTop","pathname","useLocation","scrollTo","About","margin","UsageChart","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Legend","Bar","fill","toChartData","item","urls","WappalyzerDashboard","allTechnologies","categoriesNames","t","c","getTechUrl","byTech","sortedTechs","getCategoriesByUrl","CardColumns","CategoryRoute","params","useParams","decodeURIComponent","TagRoute","UrlRoute","urlData","App","Container","fluid","role","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ff02f80b.chunk.js","sourcesContent":["export const smallUrl = (url: string): string =>\n  url\n    .toLowerCase()\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\");\n\nexport const getHostName = (url: string): string =>\n  url\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\")\n    .replace(/^([^/]+)\\/.+$/, \"$1\");\n\nexport const getLastUrlSegment = (url: string): string =>\n  url.substring(url.lastIndexOf(\"/\") + 1);\n\nexport const sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\nexport const isToolEnabled = (name: DashlordTool): boolean => {\n  const dashlordConfig: DashlordConfig = require(\"./config.json\");\n  const hasTools = dashlordConfig.tools && dashlordConfig.tools.length;\n  return (\n    !hasTools || !!(dashlordConfig.tools && dashlordConfig.tools.includes(name))\n  );\n};\n\nexport const letterGradeValue = (grade: string): number => {\n  return (\n    {\n      \"A+\": 200,\n      A: 190,\n      \"A-\": 180,\n      \"B+\": 170,\n      B: 160,\n      \"B-\": 150,\n      \"C+\": 140,\n      C: 130,\n      \"C-\": 120,\n      \"D+\": 110,\n      D: 100,\n      \"D-\": 90,\n      \"E+\": 80,\n      E: 70,\n      \"E-\": 60,\n      \"F+\": 50,\n      F: 40,\n      \"F-\": 30,\n    }[grade] || 0\n  );\n};\n","import * as React from \"react\";\n\nimport { Nav } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Home, BarChart, Search } from \"react-feather\";\nimport uniq from \"lodash.uniq\";\n\nimport { smallUrl, sortByKey, isToolEnabled } from \"../utils\";\n\ntype SidebarProps = {\n  report: DashLordReport;\n};\n\nexport const Sidebar: React.FC<SidebarProps> = ({ report }) => {\n  const sortedReport = (report && report.sort(sortByKey(\"url\"))) || [];\n  const categories = uniq(\n    sortedReport.filter((u) => u.category).map((u) => u.category)\n  ).sort() as string[];\n  return (\n    <Nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n      <div className=\"sidebar-sticky pt-3\">\n        <ul className=\"nav flex-column\">\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <Home size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Accueil\n            </NavLink>\n            <NavLink\n              to=\"/intro\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <BarChart size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Introduction\n            </NavLink>\n          </li>\n        </ul>\n\n        {(categories.length > 1 && (\n          <React.Fragment>\n            <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n              <span>Catégories</span>\n            </h6>\n            <ul className=\"nav flex-column\">\n              {categories.map((category) => (\n                <li\n                  className=\"nav-item\"\n                  key={category}\n                  style={{\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  <NavLink\n                    className=\"nav-link\"\n                    to={`/category/${category}`}\n                    activeClassName=\"active\"\n                    exact={true}\n                  >\n                    <BarChart\n                      size={16}\n                      style={{ marginTop: -5, marginRight: 5 }}\n                    />\n                    {category}\n                  </NavLink>\n                </li>\n              ))}\n            </ul>\n          </React.Fragment>\n        )) ||\n          null}\n\n        {isToolEnabled(\"wappalyzer\") && (\n          <div>\n            <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n              <span>Rapports</span>\n            </h6>\n            <ul className=\"nav flex-column\">\n              <li\n                className=\"nav-item\"\n                style={{\n                  whiteSpace: \"pre\",\n                }}\n              >\n                <NavLink\n                  className=\"nav-link\"\n                  to={`/wappalyzer`}\n                  activeClassName=\"active\"\n                  exact={true}\n                >\n                  <BarChart\n                    size={16}\n                    style={{ marginTop: -5, marginRight: 5 }}\n                  />\n                  Technologies\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )||null}\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>Urls</span>\n        </h6>\n\n        <ul className=\"nav flex-column\">\n          {sortedReport.map((url) => (\n            <li\n              className=\"nav-item\"\n              key={url.url}\n              style={{\n                whiteSpace: \"pre\",\n              }}\n            >\n              <NavLink\n                className=\"nav-link\"\n                to={`/url/${url.url}`}\n                activeClassName=\"active\"\n                exact={true}\n              >\n                <Search size={16} style={{ marginTop: -5, marginRight: 5 }} />\n                {smallUrl(url.url)}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Nav>\n  );\n};\n","import * as React from \"react\";\nimport { Cloud, Info } from \"react-feather\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const Topbar = () => (\n  <Navbar\n    variant=\"dark\"\n    bg=\"dark\"\n    sticky=\"top\"\n    expand=\"lg\"\n    className=\"p-0 flex-md-nowrap shadow\"\n    style={{ justifyContent: 'space-between' }}\n  >\n    <Link to=\"/\">\n      <div\n        className=\"px-3\"\n        style={{ height: 30, fontSize: \"1.3rem\", color: \"var(--white)\" }}\n      >\n        <Cloud size={16} style={{ marginTop: -5, marginRight: 10 }} />\n        DashLord\n      </div>\n    </Link>\n    <Link title=\"À propos\" to=\"/about\" style={{ color: \"white\", marginRight: 5 }}><Info /></Link>\n  </Navbar>\n);\n","import * as React from \"react\";\n\nimport { Badge } from \"react-bootstrap\";\n\ntype GradeProps = {\n  grade: string | number;\n  label?: string | number | null;\n  small?: boolean;\n};\n\nconst grades = {\n  A: \"success\",\n  B: \"info\",\n  C: \"info\",\n  D: \"warning\",\n  E: \"danger\",\n  F: \"danger\",\n} as Record<string, string>;\n\nexport const Grade: React.FC<GradeProps> = ({ grade, label, small }) => {\n  const newGrade = (grade + \"\").substring(0, 1).toUpperCase();\n  const variant = grades[newGrade] || \"danger\";\n\n  return (\n    <Badge\n      variant={variant}\n      style={{ minWidth: 60, fontSize: small ? \"1.1em\" : \"2em\" }}\n    >\n      {label !== undefined ? label : grade}\n    </Badge>\n  );\n};\n","// compute a performance score from 0 to 100 from lighthouse report\nexport const getPerformanceScore = (report: LighthouseReport): number => {\n  const firstContentfulPaint =\n    report.audits.metrics.details?.items &&\n    report.audits.metrics.details?.items[0].firstContentfulPaint; // in milliseconds\n  const numRequests =\n    report.audits.diagnostics.details?.items &&\n    report.audits.diagnostics.details?.items[0].numRequests;\n  const totalByteWeight =\n    report.audits.diagnostics.details?.items &&\n    report.audits.diagnostics.details?.items[0].totalByteWeight;\n\n  const maxRequests = 30;\n  const maxFirstPaint = 1000;\n  const maxByteWeight = 1024 * 1024;\n\n  let score = 100;\n\n  // penalty for slow first contentful paint : -10 per additional second\n  if (firstContentfulPaint > maxFirstPaint) {\n    score -= Math.min(\n      100 / 3,\n      ((firstContentfulPaint - maxFirstPaint) / 1000) * 10\n    );\n  }\n  // penalty for additional requests : -5 per additionnal request\n  if (numRequests > maxRequests) {\n    score -= Math.min(100 / 3, (numRequests - maxRequests) * 5);\n  }\n  // penalty for big totalByteWeight : -20 per Mb\n  if (totalByteWeight > maxByteWeight) {\n    score -= Math.min(\n      100 / 3,\n      ((totalByteWeight - maxByteWeight) / (1024 * 1024)) * 20\n    );\n  }\n\n  score = Math.max(0, score / 100);\n  return score;\n};\n","import * as React from \"react\";\n\ntype AccessibilityWarningProps = {\n  style?: React.CSSProperties;\n};\n\nexport const AccessibilityWarnings = ({ style }: AccessibilityWarningProps) => (\n  <div style={style}>\n    Moins de 25% des critères d'accessibilité peuvent être testés\n    automatiquement, <strong>une expertise manuelle est requise</strong>.\n    <br />\n    <br />\n    Ce score ne représente pas le score RGAA mais une partie des bonnes\n    pratiques de base à appliquer.\n  </div>\n);\n","import * as React from \"react\";\nimport { useState, useMemo } from \"react\";\nimport { Slash, Info, Search, AlertTriangle } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"rc-tooltip\";\nimport orderBy from \"lodash.orderby\";\n\nimport BaseTable, { AutoResizer, Column, SortOrder } from \"react-base-table\";\n\nimport { Grade } from \"./Grade\";\nimport { smallUrl, isToolEnabled, letterGradeValue } from \"../utils\";\nimport { getPerformanceScore } from \"../lib/lighthouse/getPerformanceScore\";\nimport { AccessibilityWarnings } from \"../lib/lighthouse/AccessibilityWarnings\";\n\nimport \"react-base-table/styles.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\n\ntype DashboardProps = { report: DashLordReport };\n\nconst remap = (value: number, x1: number, y1: number, x2: number, y2: number) =>\n  ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n\nconst scoreToGrade = (score: number) => {\n  const grades = \"A,B,C,D,E,F\".split(\",\");\n\n  const newGrade = Math.min(\n    grades.length - 1,\n    Math.floor(remap(score, 0, 1, 0, 6))\n  );\n\n  return grades[newGrade];\n};\n\nconst IconUnknown = () => <Slash size={20} />;\n\nconst getGradeTrackers = (count: number) => {\n  return count > 10 ? \"F\" : count > 2 ? \"C\" : count > 0 ? \"B\" : \"A\";\n};\n\nconst getGradeCookies = (count: number) => {\n  return count > 10\n    ? \"F\"\n    : count > 5\n    ? \"E\"\n    : count > 2\n    ? \"C\"\n    : count > 0\n    ? \"B\"\n    : \"A\";\n};\n\nconst getNucleiGrade = (events: NucleiReportEntry[]) => {\n  return events.filter(\n    (n) => n.info.severity === \"critical\" || n.info.severity === \"high\"\n  ).length\n    ? \"F\"\n    : events.length\n    ? \"B\"\n    : \"A\";\n};\n\nconst getOwaspGrade = (owaspAlerts: ZapReportSiteAlert[]) => {\n  const maxSeverity = Math.max(\n    ...owaspAlerts.map((o) => parseInt(o.riskcode) || 0)\n  );\n\n  return maxSeverity > 3\n    ? \"F\"\n    : maxSeverity > 2\n    ? \"D\"\n    : maxSeverity > 1\n    ? \"C\"\n    : maxSeverity > 0\n    ? \"B\"\n    : \"A\";\n};\n\nconst getGradeUpdownio = (uptime: number) => {\n  return uptime > 0.99\n    ? \"A\"\n    : uptime > 0.98\n    ? \"B\"\n    : uptime > 0.97\n    ? \"C\"\n    : uptime > 0.96\n    ? \"D\"\n    : uptime > 0.95\n    ? \"E\"\n    : \"F\";\n};\n\nconst getDependabotNodeGrade = (nodes: DependabotNode[]) => {\n  return nodes.filter(\n    (a) =>\n      a.securityVulnerability.severity === \"CRITICAL\" ||\n      a.securityVulnerability.severity === \"HIGH\"\n  ).length\n    ? \"F\"\n    : nodes.length\n    ? \"B\"\n    : \"A\";\n};\n\ntype ColumnHeaderProps = {\n  title: string;\n  info: string;\n  warning?: React.ReactNode;\n};\n\nconst ColumnHeader: React.FC<ColumnHeaderProps> = ({\n  title,\n  info,\n  warning,\n}) => (\n  <div style={{ textAlign: \"center\" }}>\n    <span style={{ fontSize: \"0.9em\" }}>\n      {title}\n      <br />\n      <Tooltip\n        placement=\"bottom\"\n        trigger={[\"hover\"]}\n        overlay={<div style={{ maxWidth: 300 }}>{info}</div>}\n      >\n        <Info size={16} style={{ cursor: \"pointer\" }} />\n      </Tooltip>\n    </span>\n\n    {warning && (\n      <Tooltip\n        placement=\"bottom\"\n        trigger={[\"hover\"]}\n        overlay={<div style={{ maxWidth: 300 }}>{warning}</div>}\n      >\n        <AlertTriangle\n          size={16}\n          style={{\n            stroke: \"var(--danger)\",\n            marginLeft: 5,\n            cursor: \"pointer\",\n          }}\n        />\n      </Tooltip>\n    )}\n  </div>\n);\n\ntype BadgeProps = { report: UrlReport };\ntype LightHouseBadgeProps = BadgeProps & {\n  category: LighthouseReportCategoryKey;\n};\n\nconst LightHouseBadge: React.FC<LightHouseBadgeProps> = ({\n  report,\n  category,\n}) => {\n  const lhrCategories = report.lhr && report.lhr.categories;\n  if (!report.lhr || !lhrCategories) {\n    return <IconUnknown />;\n  }\n  // use custom scoring\n  lhrCategories[\"performance\"].score = getPerformanceScore(report.lhr);\n\n  const value =\n    lhrCategories &&\n    lhrCategories[category] &&\n    (lhrCategories[category].score as number);\n  return (\n    <Grade\n      small\n      grade={scoreToGrade(1 - value)}\n      label={(value * 100).toFixed() + \" %\"}\n    />\n  );\n};\n\nconst SSLBadge: React.FC<BadgeProps> = ({ report }) => {\n  const overallGrade =\n    report.testssl &&\n    report.testssl.find((entry) => entry.id === \"overall_grade\");\n  const value = overallGrade && overallGrade.finding;\n  if (!value) {\n    return <IconUnknown />;\n  }\n  return <Grade small grade={value} />;\n};\n\nconst HTTPBadge: React.FC<BadgeProps> = ({ report }) => {\n  const value = report.http && report.http.grade;\n  if (!value) {\n    return <IconUnknown />;\n  }\n  return <Grade small grade={value} />;\n};\n\nconst ZapBadge: React.FC<BadgeProps> = ({ report }) => {\n  const owaspAlerts =\n    (report.zap &&\n      report.zap.site &&\n      report.zap.site.flatMap((site) =>\n        site.alerts.filter((a) => a.riskcode !== \"0\")\n      )) ||\n    [];\n  const owaspCount = report.zap && owaspAlerts.length;\n  const owaspGrade = getOwaspGrade(owaspAlerts);\n\n  if (!owaspGrade) {\n    return <IconUnknown />;\n  }\n  return <Grade small grade={owaspGrade} label={owaspCount} />;\n};\n\nconst ThirdPartiesTrackersBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.thirdparties) {\n    return <IconUnknown />;\n  }\n  const trackersCount =\n    (report.thirdparties &&\n      report.thirdparties.trackers &&\n      report.thirdparties.trackers.length) ||\n    0;\n  const trackersGrade = getGradeTrackers(trackersCount);\n  return <Grade small grade={trackersGrade} label={trackersCount} />;\n};\n\nconst ThirdPartiesCookiesBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.thirdparties) {\n    return <IconUnknown />;\n  }\n  const cookiesCount =\n    (report.thirdparties &&\n      report.thirdparties.cookies &&\n      report.thirdparties.cookies.length) ||\n    0;\n  const cookiesGrade = getGradeCookies(cookiesCount);\n  return <Grade small grade={cookiesGrade} label={cookiesCount} />;\n};\n\nconst NucleiBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.nuclei) {\n    return <IconUnknown />;\n  }\n\n  // NUCLEI\n  const nucleiCount = report.nuclei && report.nuclei.length;\n  const nucleiGrade = report.nuclei && getNucleiGrade(report.nuclei);\n\n  return <Grade small grade={nucleiGrade} label={nucleiCount} />;\n};\n\nconst DependabotBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.dependabot) {\n    return <IconUnknown />;\n  }\n\n  // dependabot\n  const dependabotCount =\n    report.dependabot &&\n    report.dependabot\n      .filter(Boolean)\n      .map((repo) => repo.vulnerabilityAlerts.totalCount)\n      .reduce((prev, curr) => prev + curr, 0);\n  const maxGrade = (a: \"F\" | \"B\" | \"A\", b: \"F\" | \"B\" | \"A\") => {\n    const grades = new Map();\n    grades.set(\"F\", 3);\n    grades.set(\"B\", 2);\n    grades.set(\"A\", 1);\n    const orders = new Map();\n    orders.set(3, \"F\");\n    orders.set(2, \"B\");\n    orders.set(1, \"A\");\n    return orders.get(Math.max(grades.get(a), grades.get(b)));\n  };\n  const grades =\n    report.dependabot &&\n    report.dependabot\n      .filter(Boolean)\n      .map((repo) => getDependabotNodeGrade(repo.vulnerabilityAlerts.nodes));\n\n  if (!grades.length) {\n    return <IconUnknown />;\n  }\n\n  const dependabotGrade = grades.reduce(maxGrade);\n  return <Grade small grade={dependabotGrade} label={dependabotCount} />;\n};\n\nconst getCodescanAlertGrade = (alerts: CodescanAlert[]) => {\n  return alerts.filter(\n    (a) =>\n      a.rule.severity === \"ERROR\"\n  ).length\n    ? \"F\"\n    : alerts.length\n    ? \"B\"\n    : \"A\";\n};\n\nconst CodescanBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.codescan) {\n    return <IconUnknown />;\n  }\n\n  // codescan\n  const codescanCount =\n    report.codescan &&\n    report.codescan\n      .filter(Boolean)\n      .map((repo) => repo.alerts.length)\n      .reduce((prev, curr) => prev + curr, 0);\n  const maxGrade = (a: \"F\" | \"B\" | \"A\", b: \"F\" | \"B\" | \"A\") => {\n    const grades = new Map();\n    grades.set(\"F\", 3);\n    grades.set(\"B\", 2);\n    grades.set(\"A\", 1);\n    const orders = new Map();\n    orders.set(3, \"F\");\n    orders.set(2, \"B\");\n    orders.set(1, \"A\");\n    return orders.get(Math.max(grades.get(a), grades.get(b)));\n  };\n  const grades =\n    report.codescan &&\n    report.codescan\n      .filter(Boolean)\n      .map((repo) => getCodescanAlertGrade(repo.alerts));\n\n  if (!grades.length) {\n    return <IconUnknown />;\n  }\n\n  const codescanGrade = grades.reduce(maxGrade);\n  return <Grade small grade={codescanGrade} label={codescanCount} />;\n};\n\nconst UpDownIoBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.updownio) {\n    return <IconUnknown />;\n  }\n  const updownio = report.updownio && report.updownio.uptime;\n  const updownioGrade = getGradeUpdownio(updownio);\n  return (\n    <Grade small grade={updownioGrade} label={updownio.toFixed() + \" %\"} />\n  );\n};\n\ntype SortState = {\n  key: string;\n  order: SortOrder;\n  column: { [column: string]: string };\n};\n\nconst defaultSort = {\n  key: \"url\",\n  order: \"asc\",\n  column: { dataKey: \"url\" },\n} as SortState;\n\nexport const Dashboard: React.FC<DashboardProps> = ({ report }) => {\n  const [sortBy, setSortBy] = useState(defaultSort);\n\n  const onColumnSort = (column: any) => {\n    setSortBy(column);\n  };\n\n  const sortedReport = useMemo(() => {\n    const getSortedRows = (rows: any) => {\n      return orderBy(\n        rows,\n        (row) => {\n          if (sortBy.column.dataGetter) {\n            //@ts-expect-error\n            return sortBy.column.dataGetter({ rowData: row });\n          } else if (sortBy.column.key) {\n            return row[sortBy.column.key];\n          }\n        },\n        sortBy.order\n      );\n    };\n\n    return getSortedRows(report);\n  }, [sortBy, report]);\n\n  const defaultColumnProps = {\n    width: 120,\n    sortable: true,\n    align: \"center\",\n  } as {\n    width: number;\n    sortable: boolean;\n    align: \"center\" | \"left\" | \"right\";\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"calc(100vh - 30px)\" }}>\n      <AutoResizer>\n        {({ width, height }) => (\n          <BaseTable\n            data={sortedReport}\n            width={width}\n            height={height}\n            sortBy={sortBy}\n            onColumnSort={onColumnSort}\n          >\n            <Column\n              key=\"url\"\n              title=\"url\"\n              sortable={true}\n              width={300}\n              flexGrow={1}\n              cellRenderer={({ rowData }) => (\n                <Link\n                  to={`/url/${encodeURIComponent((rowData as UrlReport).url)}`}\n                >\n                  <Search size={16} />\n                  &nbsp;{smallUrl((rowData as UrlReport).url)}\n                </Link>\n              )}\n            />\n            {isToolEnabled(\"lighthouse\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"accessibility\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (\n                    (report &&\n                      report.lhr &&\n                      report.lhr.categories.accessibility.score) ||\n                    0\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Accessibilité\"\n                    info=\"Bonnes pratiques en matière d'accessibilité web (LightHouse)\"\n                    warning={<AccessibilityWarnings />}\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <LightHouseBadge\n                    report={rowData as UrlReport}\n                    category=\"accessibility\"\n                  />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"lighthouse\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"performance\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (report.lhr && getPerformanceScore(report.lhr)) || 0;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Performance\"\n                    info=\"Performances de chargement des pages web (LightHouse)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <LightHouseBadge\n                    report={rowData as UrlReport}\n                    category=\"performance\"\n                  />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"lighthouse\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"seo\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (\n                    (report && report.lhr && report.lhr.categories.seo.score) ||\n                    0\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"SEO\"\n                    info=\"Bonnes pratiques en matière de référencement naturel (LightHouse)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <LightHouseBadge\n                    report={rowData as UrlReport}\n                    category=\"seo\"\n                  />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"testssl\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"ssl\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  const overallGrade =\n                    report.testssl &&\n                    report.testssl.find(\n                      (entry) => entry.id === \"overall_grade\"\n                    );\n                  return overallGrade && letterGradeValue(overallGrade.finding);\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"SSL\"\n                    info=\"Niveau de confiance du certificat SSL (testssl.sh)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <SSLBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"http\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"http\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return report.http && letterGradeValue(report.http.grade);\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"HTTP\"\n                    info=\"Bonnes pratiques de configuration HTTP (Mozilla observatory)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <HTTPBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"updownio\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"updownio\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return report.updownio && report.updownio.uptime;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Disponibilité\"\n                    info=\"Disponibilité du service (updown.io)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <UpDownIoBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"dependabot\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"dependabot\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  const dependabotCount =\n                    report.dependabot &&\n                    report.dependabot\n                      .filter(Boolean)\n                      .map((repo) => repo.vulnerabilityAlerts.totalCount)\n                      .reduce((prev, curr) => prev + curr, 0);\n                  return dependabotCount;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Vulnérabilités\"\n                    info=\"Vulnérabilités applicatives detectées dans les dépendances du code (dependabot)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <DependabotBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"codescan\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"codescan\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  const codescanCount =\n                    report.codescan &&\n                    report.codescan\n                      .filter(Boolean)\n                      .map((repo) => repo.alerts.length)\n                      .reduce((prev, curr) => prev + curr, 0);\n                  return codescanCount;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Vulnérabilités potentielles\"\n                    info=\"Potentielles vulnérabilités detectées dans les codes sources (codescan)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <CodescanBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"zap\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"zap\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  const owaspAlerts =\n                    (report.zap &&\n                      report.zap.site &&\n                      report.zap.site.flatMap((site) =>\n                        site.alerts.filter((a) => a.riskcode !== \"0\")\n                      )) ||\n                    [];\n                  const maxSeverity = Math.max(\n                    ...owaspAlerts.map((o) => parseInt(o.riskcode) || 0)\n                  );\n                  return maxSeverity;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"OWASP\"\n                    info=\"Bonnes pratiques de sécurité OWASP (Zap baseline)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <ZapBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"thirdparties\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"trackers\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (\n                    report.thirdparties && report.thirdparties.trackers.length\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Trackers\"\n                    info=\"Nombre de scripts externes détectés\"\n                    warning={\n                      <div>\n                        Certains scripts externes légitimes peuvent être\n                        considérés comme trackers.\n                      </div>\n                    }\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <ThirdPartiesTrackersBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"thirdparties\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"cookies\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return (\n                    report.thirdparties && report.thirdparties.cookies.length\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Cookies\"\n                    info=\"Nombre de cookies présents\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <ThirdPartiesCookiesBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n\n            {isToolEnabled(\"nuclei\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"nuclei\"\n                dataGetter={({ rowData }) => {\n                  const report = rowData as UrlReport;\n                  return report.nuclei && report.nuclei.length;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Nucléi\"\n                    info=\"Erreurs de configuration\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => (\n                  <NucleiBadge report={rowData as UrlReport} />\n                )}\n              />\n            )}\n          </BaseTable>\n        )}\n      </AutoResizer>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-feather\";\n\ntype PanelProps = {\n  title: string;\n  children: React.ReactNode;\n  info?: string | React.ReactNode;\n  url?: string;\n  style?: object;\n  className?:string;\n};\n\nexport const Panel: React.FC<PanelProps> = ({ title, children, info, url, style, className }) => (\n  <Card style={{ marginBottom: 20, ...style }} className={className}>\n    <Card.Title style={{ background: \"#000091\", color: \"white\", padding: 10 }}>\n      {title}\n      {info && (\n        <span\n          style={{ fontWeight: \"normal\", fontSize: \"0.6em\", marginLeft: 10 }}\n        >\n          {info}\n        </span>\n      )}\n      {url && (\n        <a\n          style={{ color: \"white\", float: \"right\" }}\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <ExternalLink />\n        </a>\n      )}\n    </Card.Title>\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype HTTPProps = { data: HttpReport };\n\nconst HttpRowBadge = (row: HttpTestReport) => {\n  const severity = Math.abs(row.score_modifier);\n  const variant =\n    severity > 50\n      ? \"danger\"\n      : severity > 30\n      ? \"danger\"\n      : severity > 20\n      ? \"warning\"\n      : severity > 10\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nexport const HTTP: React.FC<HTTPProps> = ({ data }) => {\n  if (!data.url) {\n    return null;\n  }\n  const url =\n    (data && `https://observatory.mozilla.org/analyze/${smallUrl(data.url)}`) ||\n    null;\n  const failures = Object.keys(data.details)\n    .filter((key) => !data.details[key].pass)\n    .map((key) => data.details[key]);\n  failures.sort((a, b) => a.score_modifier - b.score_modifier);\n\n  return (\n    (url && (\n      <Panel\n        title=\"HTTP\"\n        info=\"Informations collectées par le Mozilla HTTP observatory\"\n        url={url}\n      >\n        <h3>\n          Scan Summary : <Grade small grade={data.grade} />\n        </h3>\n        <br />\n        {(failures.length && (\n          <React.Fragment>\n            <br />\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th style={{ width: 100 }}>impact</th>\n                  <th>id</th>\n                  <th>description</th>\n                </tr>\n              </thead>\n              <tbody>\n                {failures.map((failure, i) => (\n                  <tr key={failure.name + i}>\n                    <td>\n                      <HttpRowBadge {...failure} />\n                    </td>\n                    <td>{failure.name}</td>\n                    <td>{failure.score_description}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </React.Fragment>\n        )) ||\n          null}\n      </Panel>\n    )) ||\n    null\n  );\n};\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport { Gauge as CanvasGauge, Donut } from \"gaugeJS/dist/gauge.min\";\n\n// copied from https://unpkg.com/react-gaugejs@1.2.1/Gauge.js due to bad transpilation\n\ntype GaugeProps = {\n  maxValue?: number;\n  minValue?: number;\n  width?: number;\n  height?: number;\n  animationSpeed?: number;\n  options?: object;\n  donut?: boolean;\n  value: number;\n  className?: string;\n};\n\n/**\n * React wrapper for GaugeJS.\n * @param {*} props\n * @return {Object} React element\n */\nexport const Gauge: React.FC<GaugeProps> = (props) => {\n  const canvas = useRef();\n  const span = useRef();\n  const gauge = useRef();\n\n  useEffect(() => {\n    gauge.current = props.donut\n      ? new Donut(canvas.current)\n      : new CanvasGauge(canvas.current);\n    gauge.current.setTextField(span.current);\n    gauge.current.setOptions(props.options);\n    gauge.current.maxValue = props.maxValue;\n    gauge.current.setMinValue(props.minValue);\n    gauge.current.animationSpeed = props.animationSpeed;\n    gauge.current.set(props.value);\n  }, [props.donut]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    gauge.current.setOptions(props.options);\n  }, [props.options]);\n\n  useEffect(() => {\n    gauge.current.maxValue = props.maxValue;\n  }, [props.maxValue]);\n\n  useEffect(() => {\n    gauge.current.setMinValue(props.minValue);\n  }, [props.minValue]);\n\n  useEffect(() => {\n    gauge.current.animationSpeed = props.animationSpeed;\n  }, [props.animationSpeed]);\n\n  useEffect(() => {\n    gauge.current.set(props.value);\n  }, [props.value]);\n\n  /* eslint-disable no-unused-vars */\n  const {\n    maxValue,\n    minValue,\n    animationSpeed,\n    options,\n    donut,\n    value,\n    textChangeHandler,\n    ...passThroughProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  return (\n    <>\n      <canvas\n        ref={canvas}\n        className=\"gauge-canvas\"\n        {...passThroughProps}\n      ></canvas>\n      <span ref={span} style={{ display: \"none\" }}></span>\n    </>\n  );\n};\n\nGauge.defaultProps = {\n  maxValue: 3000,\n  minValue: 0,\n  animationSpeed: 32,\n  options: {\n    // staticLabels: {\n    //   font: \"10px sans-serif\", // Specifies font\n    //   labels: [100, 130, 150, 220.1, 260, 300], // Print labels at these values\n    //   color: \"#000000\", // Optional: Label text color\n    //   fractionDigits: 0, // Optional: Numerical precision. 0=round off.\n    // },\n    percentColors: [\n      [0.0, \"#FF4E42\"],\n      [0.5, \"#ffa400\"],\n      [0.9, \"#0CCE6B\"],\n      //[0.90, \"#ffa400\"],\n      //  [0.3, \"#ff0000\"],\n      // [0.5, \"#f9c802\"],\n      [1, \"#0CCE6B\"],\n    ],\n    angle: 0.25,\n    lineWidth: 0.44,\n    radiusScale: 1,\n    pointer: {\n      length: 0.6,\n      strokeWidth: 0.035,\n      color: \"#333\",\n    },\n    //limitMax: false,\n    //limitMin: false,\n    //colorStart: \"red\",\n    //colorStop: \"pink\",\n    strokeColor: \"#FF4E42\",\n    generateGradient: true,\n    highDpiSupport: true,\n  },\n  donut: false,\n  textChangeHandler: () => {},\n};\n\nexport default Gauge;\n","import * as React from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Gauge } from \"./Gauge\";\nimport { Panel } from \"./Panel\";\nimport { getPerformanceScore } from \"../lib/lighthouse/getPerformanceScore\";\nimport { AccessibilityWarnings } from \"../lib/lighthouse/AccessibilityWarnings\";\n\nconst toTime = (ms: number) => {\n  let minutes = 0,\n    seconds = 0;\n  let rest = ms;\n  if (rest > 60 * 1000) {\n    minutes = Math.floor(rest / 60000);\n    rest -= minutes * 60000;\n  }\n  if (rest > 1000) {\n    seconds = Math.floor(rest / 1000);\n    rest -= seconds * 1000;\n  }\n  if (minutes > 0) {\n    return `${minutes}min ${(seconds / 100).toFixed()}s`;\n  }\n  return `${seconds}.${(rest / 100).toFixed()}s`;\n};\n\nconst toSize = (bytes: number) => {\n  const factor = 1000;\n  let mb = 0,\n    kb = 0;\n  let rest = bytes;\n  if (rest > factor * factor) {\n    mb = Math.floor(rest / (factor * factor));\n    rest -= mb * factor * factor;\n  }\n  if (rest > factor) {\n    kb = Math.floor(rest / factor);\n    rest -= kb * factor;\n  }\n  if (mb > 0) {\n    return `${mb}.${(kb / 100).toFixed()}Mb`;\n  }\n  return `${kb}.${(rest / 100).toFixed()}Kb`;\n};\n\ntype LighthouseProps = { data: LighthouseReport; url: string };\n\nexport const LightHouse: React.FC<LighthouseProps> = ({ data, url }) => {\n  if (!data.audits.metrics.details) {\n    return null;\n  }\n\n  const highlights = {\n    \"First contentful Paint\":\n      data.audits.metrics.details &&\n      data.audits.metrics.details.items &&\n      toTime(data.audits.metrics.details.items[0].firstContentfulPaint),\n    \"Time to interactive\":\n      data.audits.metrics.details &&\n      data.audits.metrics.details.items &&\n      toTime(data.audits.metrics.details.items[0].interactive),\n    \"Total requests\":\n      data.audits.diagnostics.details &&\n      data.audits.diagnostics.details.items &&\n      data.audits.diagnostics.details.items[0].numRequests,\n    \"Total weight\":\n      data.audits.diagnostics.details &&\n      data.audits.diagnostics.details.items &&\n      toSize(data.audits.diagnostics.details.items[0].totalByteWeight),\n    // \"Max server Latency\": toTime(\n    //   data.audits.diagnostics.details.items[0].maxServerLatency\n    //   ),\n  } as object;\n\n  const order = [\"accessibility\", \"performance\", \"seo\", \"best-practices\"];\n\n  // use custom scoring\n  data.categories[\"performance\"].score = getPerformanceScore(data);\n\n  return (\n    <Panel\n      title=\"LightHouse\"\n      info=\"Informations collectées par l'outil Google LightHouse\"\n      url={url}\n    >\n      <Row>\n        <Col xs={12}>\n          <AccessibilityWarnings style={{ marginBottom: 20 }} />\n        </Col>\n        {order.map((key, i: number) => {\n          const category = data.categories[key as LighthouseReportCategoryKey];\n          return (\n            (category.score && (\n              <Col\n                key={category.title + i}\n                xs={12}\n                md={6}\n                lg={3}\n                className=\"text-center mb-3\"\n              >\n                <Card>\n                  <Gauge\n                    width={100}\n                    height={60}\n                    value={category.score * 100}\n                    minValue={0}\n                    maxValue={100}\n                    animationSpeed={32}\n                  />\n                  <Card.Body>\n                    <Card.Title>{category.title}</Card.Title>\n                    <Card.Title\n                      style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                    >\n                      {(category.score * 100).toFixed() + \"%\"}\n                    </Card.Title>\n                  </Card.Body>\n                </Card>\n              </Col>\n            )) ||\n            null\n          );\n        })}\n      </Row>\n      <Row>\n        {Object.keys(highlights).map((label) => {\n          return (\n            <Col xs={12} md={6} lg={3} key={label} className=\"text-center mb-3\">\n              <Card className=\"text-center\">\n                <Card.Body>\n                  <Card.Title style={{ fontSize: \"0.9rem\" }}>\n                    {label}\n                  </Card.Title>\n                  <Card.Title\n                    style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}\n                  >\n                    {/* @ts-expect-error */}\n                    {highlights[label]}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </Panel>\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\n\nconst NucleiBadge = (row: NucleiReportEntry) => {\n  const severity = (row.info && row.info.severity) || \"critical\";\n  const variant =\n    severity === \"critical\"\n      ? \"danger\"\n      : severity === \"high\"\n        ? \"danger\"\n        : severity === \"medium\"\n          ? \"warning\"\n          : severity === \"low\"\n            ? \"info\"\n            : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nconst nucleiSeverities = \"info,low,medium,high,critical\".split(\",\");\n\nconst nucleiOrder = (a: NucleiReportEntry, b: NucleiReportEntry) => (\n  nucleiSeverities.indexOf(a.info.severity) -\n  nucleiSeverities.indexOf(b.info.severity)\n);\n\n\ntype NucleiProps = { data: NucleiReport };\n\nexport const Nuclei: React.FC<NucleiProps> = ({ data }) => {\n  const rows = data;\n  rows.sort(nucleiOrder);\n  return (\n    (rows.length && (\n      <Panel\n        title=\"Nuclei\"\n        info=\"Détection d'erreurs de configuration et vulnérabilités\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }}>severity</th>\n              <th>id</th>\n              <th>name</th>\n              <th>matcher</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((failure: NucleiReportEntry, i: number) => {\n              return (\n                <tr key={failure.templateID + i}>\n                  <td>\n                    <NucleiBadge {...failure} />\n                  </td>\n                  <td>{failure.templateID}</td>\n                  <td>{failure.info.name}</td>\n                  <td>{failure.matcher_name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: ZapReportSiteAlert, b: ZapReportSiteAlert) => {\n  // high criticity first\n  const order = parseInt(b.riskcode) - parseInt(a.riskcode);\n  if (order === 0) {\n    // high confidence first\n    return parseInt(b.confidence) - parseInt(a.confidence);\n  }\n  return order;\n};\n\nconst OwaspBadge = (row: ZapReportSiteAlert) => {\n  const severity = row.riskcode;\n  const variant =\n    severity === \"0\"\n      ? \"info\"\n      : severity === \"1\"\n        ? \"warning\"\n        : severity === \"2\"\n          ? \"danger\"\n          : severity === \"3\"\n            ? \"danger\"\n            : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {row.riskdesc}\n    </Badge>\n  );\n};\n\ntype OwaspProps = { data: ZapReport; url: string };\n\nexport const Owasp: React.FC<OwaspProps> = ({ data, url }) => {\n  const alerts =\n    data && data.site && data.site.flatMap((site) => site.alerts) || [];\n  alerts.sort(orderBySeverity);\n  return (\n    (alerts.length && (\n      <Panel\n        title=\"OWASP\"\n        url={url}\n        info=\"Scan de vulnérabiliés OWASP baseline\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                risk/confidence\n              </th>\n              <th>name</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert, i: number) => {\n              return (\n                <tr key={alert.name + i}>\n                  <td className=\"text-center\">\n                    <OwaspBadge {...alert} />\n                  </td>\n                  <td>{alert.name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Row, Col, Alert } from \"react-bootstrap\";\nimport { Info } from \"react-feather\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\n\nconst sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\nconst severities = [\"INFO\", \"OK\", \"LOW\", \"MEDIUM\", \"HIGH\", \"CRITICAL\"];\nconst getSeverityValue = (severity: string) => severities.indexOf(severity);\n\ntype SSLProps = { data: SslTestReport; url: string };\n\nexport const TestSSL: React.FC<SSLProps> = ({ data, url }) => {\n  const gradeEntry = data.find((entry) => entry.id === \"overall_grade\")\n  const grade =\n    data && gradeEntry && gradeEntry.finding;\n  const results = data.map((entry) => ({\n    ...entry,\n    severity_value: getSeverityValue(entry.severity), // add property for sort\n  }));\n  results.sort(sortByKey(\"severity_value\")).reverse();\n  const capReasons = data.filter((entry) => entry.id.indexOf('grade_cap_reason_') === 0).reverse();\n  return grade && (\n    <Panel title=\"SSL\" info=\"Informations collectées via testssl.sh\" url={url}>\n      <Row>\n        <Col>\n          <h3>\n            Scan Summary : <Grade small grade={grade} />\n          </h3>\n          <br />\n          {capReasons.map((reason: any, i: number) => {\n            return <Alert key={reason.id + i} variant=\"info\"><Info style={{ marginRight: 5 }} />{reason.finding}</Alert>\n          })}\n        </Col>\n      </Row>\n    </Panel>\n  ) || null\n};\n","import * as React from \"react\";\n\nimport { Alert, Table } from \"react-bootstrap\";\nimport Flags from \"country-flag-icons/react/3x2\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\n\ntype TrackersProps = { data: ThirdPartiesReport };\n\ntype CookiesTableProps = { cookies: ThirdPartiesReportCookies };\n\nconst CookiesTable: React.FC<CookiesTableProps> = ({ cookies }) =>\n  (cookies && cookies.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={4}>\n            Cookies\n          </th>\n        </tr>\n        <tr>\n          <th>name</th>\n          <th>domain</th>\n          <th className=\"text-center\">httpOnly</th>\n          <th className=\"text-center\">secure</th>\n        </tr>\n      </thead>\n      <tbody>\n        {cookies.map((cookie, i: number) => (\n          <tr key={cookie.name + \"\" + i}>\n            <td>{cookie.name}</td>\n            <td>{cookie.domain}</td>\n            <td className=\"text-center\">{cookie.httpOnly ? \"✔️\" : \"❌\"}</td>\n            <td className=\"text-center\">{cookie.secure ? \"✔️\" : \"❌\"}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nconst smallLinkify = (url: string) => (\n  <a href={url}>{smallUrl(url).substring(0, 25) + \"...\"}</a>\n);\n\ntype TrackersTableProps = { trackers: ThirdPartiesReportTrackers };\n\nconst TrackersTable: React.FC<TrackersTableProps> = ({ trackers }) =>\n  (trackers && trackers.length && (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={3}>\n            Third-parties ressources\n          </th>\n        </tr>\n        <tr>\n          <th>type</th>\n          <th>url</th>\n          <th>remédiation</th>\n        </tr>\n      </thead>\n      <tbody>\n        {trackers.map((tracker, i: number) => {\n          return (\n            <tr key={tracker.url + i}>\n              <td>{tracker.type}</td>\n              <td>{smallLinkify(tracker.url)}</td>\n              <td>{tracker.details && tracker.details.message}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\ntype EndPointsTableProps = { endpoints: ThirdPartiesReportEndpoints };\n\nconst EndPointsTable: React.FC<EndPointsTableProps> = ({ endpoints }) =>\n  (endpoints && endpoints.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th style={{ width: 100 }}>Flag</th>\n          <th>Hostname</th>\n          <th>IP</th>\n          <th>City</th>\n          <th>Country</th>\n        </tr>\n      </thead>\n      <tbody>\n        {endpoints.map((endpoint, i: number) => {\n          const Flag =\n            (endpoint.geoip &&\n              endpoint.geoip.country &&\n              Flags[endpoint.geoip.country.iso_code]) ||\n            null;\n          return (\n            <tr key={endpoint.hostname + \"-\" + endpoint.ip}>\n              <td className=\"text-center\">\n                {Flag && endpoint.geoip && endpoint.geoip.country && (\n                  <Flag\n                    style={{ width: 60 }}\n                    title={endpoint.geoip.country.names.fr}\n                  />\n                )}\n              </td>\n              <td>{endpoint.hostname}</td>\n              <td>{endpoint.ip}</td>\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.city &&\n                  endpoint.geoip.city.names.fr) ||\n                  \"?\"}\n              </td>\n\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.country &&\n                  endpoint.geoip.country.names.fr) ||\n                  \"?\"}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nexport const Trackers: React.FC<TrackersProps> = ({ data }) => {\n  const hasIssues = [];\n  if (data.cookies && data.cookies.length) {\n    hasIssues.push(...data.cookies);\n  }\n  if (data.trackers && data.trackers.length) {\n    hasIssues.push(...data.trackers);\n  }\n  return (\n    (hasIssues.length && (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <CookiesTable cookies={data.cookies} />\n        <TrackersTable trackers={data.trackers} />\n        <EndPointsTable endpoints={data.endpoints} />\n      </Panel>\n    )) || (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <Alert variant=\"success\">Aucun script third-party detecté</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\n\ntype WappalyzerProps = { data: WappalyzerReport };\n\nexport const Wappalyzer: React.FC<WappalyzerProps> = ({ data }) => {\n    return (\n        (data && (\n            <Panel\n                title=\"Wappalyzer\"\n                info=\"Détection des technologies\"\n            >\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th style={{ width: 250 }}>\n                                name\n                            </th>\n                            <th>categories</th>\n                            <th>website</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.technologies && data.technologies.map((techno: any, i: number) => {\n                            return (\n                                <tr key={techno.name + i}>\n                                    <td>\n                                        {techno.name}\n                                    </td>\n                                    <td>{techno.categories && techno.categories.map((cat: any) => cat.name).join(\", \")}</td>\n                                    <td><a href={techno.website} target=\"_blank\" rel=\"nopoener noreferrer\">{techno.website}</a></td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Panel>\n        )) ||\n        null\n    );\n};\n","import * as React from \"react\";\nimport { Row, Col, Alert, Card } from \"react-bootstrap\";\nimport { format } from \"date-fns\";\nimport frLocale from \"date-fns/locale/fr\";\n\nimport { Panel } from \"./Panel\";\nimport { Gauge } from \"./Gauge\";\nimport { smallUrl } from \"../utils\";\n\ntype UpDownIoProps = { data: UpDownReport; url: string };\n\nexport const UpdownIo: React.FC<UpDownIoProps> = ({ data, url }) => {\n  const urlUpdownio = (data && `https://updown.io/${data.token}`) || null;\n\n  return (\n    (urlUpdownio && smallUrl(data.url) === smallUrl(url) && (\n      <Panel\n        title=\"Temps de réponse\"\n        info=\"Informations collectées par updown.io\"\n        url={urlUpdownio}\n      >\n        <Row>\n          <Col xs={12} md={6} className=\"text-center mb-3\">\n            <Card>\n              <Gauge\n                width={100}\n                height={20}\n                value={data.uptime * 100}\n                minValue={0}\n                maxValue={100}\n                animationSpeed={32}\n              />\n              <Card.Body>\n                <Card.Title>\n                  Taux de disponibilité sur un mois glissant\n                </Card.Title>\n                <Card.Title style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}>\n                  {data.uptime + \"%\"}\n                </Card.Title>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={12} md={6} className=\"text-center mb-3\">\n            {data.ssl && (\n              <Card>\n                <Card.Body>\n                  <Card.Title>\n                    Certificat TLS {data.ssl.valid ? \"valide\" : \"expiré\"}\n                  </Card.Title>\n                  <Card.Title style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}>\n                    expire le{\" \"}\n                    {format(new Date(data.ssl.expires_at), \"dd/MM/yyyy\", {\n                      locale: frLocale,\n                    })}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            )}\n          </Col>\n        </Row>\n      </Panel>\n    )) || (\n      <Panel\n        title=\"Temps de réponse\"\n        info=\"Informations collectées par updown.io\"\n      >\n        <Alert variant=\"success\">Aucune donnée updown.io associée</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\nimport { getLastUrlSegment } from \"../utils\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: DependabotNode, b: DependabotNode) => {\n  // high criticity first\n  const severities = new Map();\n  severities.set(\"CRITICAL\", 3);\n  severities.set(\"HIGH\", 2);\n  severities.set(\"MODERATE\", 1);\n  severities.set(\"LOW\", 0);\n  return (\n    severities.get(b.securityVulnerability.severity) -\n    severities.get(a.securityVulnerability.severity)\n  );\n};\n\nconst DependabotBadge = (node: DependabotNode) => {\n  const severity = node.securityVulnerability.severity;\n  const variant =\n    severity === \"LOW\"\n      ? \"info\"\n      : severity === \"MODERATE\"\n      ? \"warning\"\n      : severity === \"HIGH\"\n      ? \"danger\"\n      : severity === \"CRITICAL\"\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\ntype DependabotProps = { data: DependabotRepository; url: string };\n\nexport const Dependabot: React.FC<DependabotProps> = ({ data, url }) => {\n  const nodes =\n    data && data.vulnerabilityAlerts.totalCount > 0\n      ? data.vulnerabilityAlerts.nodes\n      : [];\n  data.vulnerabilityAlerts.nodes.sort(orderBySeverity);\n  return (\n    (data.vulnerabilityAlerts.totalCount > 0 && (\n      <Panel\n        title=\"Dependabot\"\n        url={data.url + '/security/dependabot'}\n        info={\n          <span>\n            Scan des vulnérabiliés du dépôt Github{\" \"}\n            <a\n              style={{ color: \"white\" }}\n              href={data.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {data.url}\n            </a>\n          </span>\n        }\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                Sévérité\n              </th>\n              <th>Dépendance vulnérable</th>\n              <th>Vulnérabilités</th>\n            </tr>\n          </thead>\n          <tbody>\n            {nodes.map((node, i: number) => {\n              return (\n                <tr key={node.securityVulnerability.package.name + i}>\n                  <td className=\"text-center\">\n                    <DependabotBadge {...node} />\n                  </td>\n                  <td>{node.securityVulnerability.package.name}</td>\n                  <td>\n                    {node.securityVulnerability.advisory.references.map(\n                      (reference, i: number) => {\n                        return (\n                          <p key={getLastUrlSegment(reference.url) + i}>\n                            <a target=\"_blank\" href={reference.url} rel=\"noopener noreferrer\">\n                              {getLastUrlSegment(reference.url)}\n                            </a>\n                            <br />\n                          </p>\n                        );\n                      }\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: CodescanAlert, b: CodescanAlert) => {\n  // high criticity first\n  const severities = new Map();\n  severities.set(\"CRITICAL\", 3);\n  severities.set(\"HIGH\", 2);\n  severities.set(\"MODERATE\", 1);\n  severities.set(\"LOW\", 0);\n  return (\n    severities.get(b.rule.severity) -\n    severities.get(a.rule.severity)\n  );\n};\n\nconst CodescanBadge = (alert: CodescanAlert) => {\n  const severity = alert.rule.severity;\n  const variant =\n    severity === \"LOW\"\n      ? \"info\"\n      : severity === \"MODERATE\"\n      ? \"warning\"\n      : severity === \"HIGH\"\n      ? \"danger\"\n      : severity === \"CRITICAL\"\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\ntype CodescanProps = { data: CodescanRepository; url: string };\n\nexport const Codescan: React.FC<CodescanProps> = ({ data, url }) => {\n  const alerts =\n    data && data.alerts.length > 0\n      ? data.alerts\n      : [];\n  alerts.sort(orderBySeverity);\n  return (\n    (alerts.length > 0 && (\n      <Panel\n        title=\"Codescan\"\n        url={data.url + '/security/code-scanning'}\n        info={\n          <span>\n            Scan du code du dépôt Github{\" \"}\n            <a\n              style={{ color: \"white\" }}\n              href={data.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {data.url}\n            </a>\n          </span>\n        }\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                Sévérité\n              </th>\n              <th>Règle</th>\n              <th>Descritpion</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert, i: number) => {\n              return (\n                <tr key={alert.rule.name + i}>\n                  <td className=\"text-center\">\n                    <CodescanBadge {...alert} />\n                  </td>\n                  <td>{alert.rule.name}</td>\n                  <td>\n                    <a target=\"_blank\" href={alert.html_url} rel=\"noopener noreferrer\">\n                      {alert.rule.description}\n                    </a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport frLocale from \"date-fns/locale/fr\";\nimport { Link } from \"react-router-dom\";\nimport { Clock } from \"react-feather\";\nimport { Jumbotron, Badge } from \"react-bootstrap\";\n\nimport { isToolEnabled } from \"../utils\";\nimport { HTTP } from \"./HTTP\";\nimport { LightHouse } from \"./LightHouse\";\nimport { Nuclei } from \"./Nuclei\";\nimport { Owasp } from \"./Owasp\";\nimport { TestSSL } from \"./TestSSL\";\nimport { Trackers } from \"./Trackers\";\nimport { Wappalyzer } from \"./Wappalyzer\";\nimport { UpdownIo } from \"./UpdownIo\";\nimport { Dependabot } from \"./Dependabot\";\nimport { Codescan } from \"./Codescan\";\n\ntype UrlDetailProps = { url: string; report: UrlReport };\n\nexport const Url: React.FC<UrlDetailProps> = ({ url, report, ...props }) => {\n  const updateDate = report && report.lhr && report.lhr.fetchTime;\n  if (!report) {\n    return <div>No data available for {url}</div>;\n  }\n  return (\n    <div>\n      <Jumbotron\n        style={{ height: 100, marginTop: 10, paddingTop: 20, marginBottom: 10 }}\n      >\n        <h4>\n          <a href={url} rel=\"noreferrer noopener\" target=\"_blank\">\n            {url}\n          </a>\n        </h4>\n        <p>\n          {report.category && (\n            <Link to={`/category/${report.category}`}>\n              <Badge style={{ marginRight: 5 }} variant=\"success\">\n                {report.category}\n              </Badge>\n            </Link>\n          )}\n          {report.tags &&\n            report.tags.map((tag: string) => (\n              <Link key={tag} to={`/tag/${tag}`}>\n                <Badge style={{ marginRight: 5 }} variant=\"info\">\n                  {tag}\n                </Badge>\n              </Link>\n            ))}\n          {updateDate && (\n            <span title={updateDate}>\n              <Clock size={12} style={{ marginRight: 5 }} />\n              Mise à jour il y a :{\" \"}\n              {formatDistanceToNow(new Date(updateDate), { locale: frLocale })}\n            </span>\n          )}\n        </p>\n      </Jumbotron>\n      {(isToolEnabled(\"lighthouse\") && report.lhr && (\n        <React.Fragment>\n          <LightHouse\n            data={report.lhr}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/lhr.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"dependabot\") && report.dependabot && (\n        <React.Fragment>\n          {report.dependabot.filter(Boolean).map((repository) => {\n            return (\n              <Dependabot key={repository.url} data={repository} url={url} />\n            );\n          })}\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"codescan\") && report.codescan && (\n        <React.Fragment>\n          {report.codescan.filter(Boolean).map((repository) => {\n            return (\n              <Codescan key={repository.url} data={repository} url={url} />\n            );\n          })}\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"updownio\") && report.updownio && (\n        <React.Fragment>\n          <UpdownIo data={report.updownio} url={url} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"testssl\") && report.testssl && (\n        <React.Fragment>\n          <TestSSL\n            data={report.testssl}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/testssl.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"http\") && report.http && (\n        <React.Fragment>\n          <HTTP data={report.http} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"nuclei\") && report.nuclei && (\n        <React.Fragment>\n          <Nuclei data={report.nuclei} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"thirdparties\") && report.thirdparties && (\n        <React.Fragment>\n          <Trackers data={report.thirdparties} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"zap\") && report.zap && (\n        <React.Fragment>\n          <Owasp\n            data={report.zap}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/zap.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"wappalyzer\") && report.wappalyzer && (\n        <React.Fragment>\n          <Wappalyzer data={report.wappalyzer} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Button, Jumbotron, Alert } from \"react-bootstrap\";\nimport { AlertTriangle, Info } from \"react-feather\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { isToolEnabled } from \"../utils\";\n\nimport { Panel } from \"./Panel\";\n\nconst dashlordConfig: DashlordConfig  = require(\"../config.json\");\n\nexport const Intro: React.FC = () => {\n  return (\n    <div>\n      <br />\n      <Jumbotron style={{ padding: \"2em\" }}>\n        <h1>{dashlordConfig.title || \"DashLord\"}</h1>\n        <br />\n        Le tableau de bord aggrège les données issues de plusieurs\n        outils qui évaluent chaque URL indépendamment.\n        <br />\n        <br />\n        L'évaluation des outils ne remplace en aucun cas une expertise manuelle,\n        et seule la page d'accueil du site est ici évaluée.\n        <br />\n        <br />\n        Vous pouvez soumettre de nouvelles URLs, proposer des corrections ou\n        consulter la roadmap en{\" \"}\n        <a\n          href=\"https://github.com/SocialGouv/dashlord/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          cliquant ici\n        </a>\n        .\n        <br /><br />\n        <br />\n        <Link to=\"/dashboard\">\n          <Button variant=\"dark\">Accéder au tableau de bord</Button>\n        </Link>\n      </Jumbotron>\n\n      {isToolEnabled(\"lighthouse\") && <Panel title=\"Google Lighthouse\">\n        Permet un audit automatique de page web :\n        <br />\n        <br />\n        <li>Performances de chargement</li>\n        <li>Bonnes pratiques SEO (référencement)</li>\n        <li>Bonnes pratiques accessibilité (moteur Axe)</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Les mesures de performance, sont un instantané, donc pas forcément\n          représentatives\n          <br />\n          <AlertTriangle size={16} style={{ marginRight: 5 }} /> Les mesures\n          d'accessibilité n'abordent pas du tout{\" \"}\n          <a\n            href=\"https://www.numerique.gouv.fr/publications/rgaa-accessibilite/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            le RGAA\n          </a>\n          .\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://developers.google.com/web/tools/lighthouse\"\n        >\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"dependabot\") && <Panel title=\"Dependabot\">\n        Recense les vulnérabilités de tes dépendances dans ton code\n        <br />\n        <br />\n        <li>Scan des vulnérabilités de tes dépendances sur le dépôt Github du code</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://dependabot.com/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://docs.github.com/en/code-security/supply-chain-security/about-alerts-for-vulnerable-dependencies\"\n        >\n          Security scans\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"codescan\") && <Panel title=\"Codescan\">\n        Recense les potentielles vulnérabilités dans ton code\n        <br />\n        <br />\n        <li>Scan des potentielles vulnérabilités sur le dépôt Github du code</li>\n        <li>Possibilité d'activer autant de scanner souhaité: CodeQL, etc</li>\n        <li>Liste restreinte de langages couverts: C/C++, C#, Go, Java, JavaScript/TypeScript, Python</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://docs.github.com/en/code-security/secure-coding/about-code-scanning\">\n          Documentation\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"zap\") && <Panel title=\"OWASP Zed Attack Proxy\">\n        Scan de vulnérabilités passif \"baseline\" qui permet de détecter des\n        risques de sécurité.\n        <br />\n        <br />\n        <li>Bonnes pratiques web</li>\n        <li>Bonnes pratiques http</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://www.zaproxy.org/docs/docker/baseline-scan/\"\n        >\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"testssl\") && <Panel title=\"testssl.sh\">\n        Évalue le niveau de confiance d'un certificat SSL\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Protocoles disponibles</li>\n        <li>Compatibilité navigateurs</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <br />\n        <Button variant=\"dark\" href=\"https://testssl.sh/\">\n          Site officiel\n        </Button>\n        &nbsp;\n        <Button variant=\"dark\" href=\"https://github.com/drwetter/testssl.sh\">\n          Code source\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"http\") && <Panel title=\"Mozilla HTTP observatory\">\n        Évalue le niveau de qualité/sécurité de la page web et de son serveur\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Bonnes pratiques web</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://observatory.mozilla.org/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://github.com/mozilla/http-observatory/blob/master/httpobs/docs/scoring.md\"\n        >\n          Méthodologie\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"updownio\") && <Panel title=\"Updown.io\">\n        Évalue les temps de réponse de son serveur\n        <br />\n        <br />\n        <li>Disponibilité du site web avec calcul régulier de l'APDEX</li>\n        <li>Validité des certificats TLS</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://updown.io/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://updown.uservoice.com/knowledgebase/articles/915588-what-is-apdex\"\n        >\n          APDEX\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"nuclei\") && <Panel title=\"Nucléi\">\n        Détecte plus de 700 erreurs de configuration courantes sur les\n        applications webs.\n        <br />\n        <br />\n        <li>Sécurité</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://nuclei.projectdiscovery.io/\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"thirdparties\") && <Panel title=\"Third-parties\">\n        Liste tous les scripts externes chargés par une URL et qui peuvent avoir\n        un impact sur :\n        <br />\n        <br />\n        <li>Performances web</li>\n        <li>Sécurité</li>\n        <li>Vie privée</li>\n        <br />\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Certains script légitimes peuvent apparaitre dans cette catégorie\n          s'ils sont hébergés sur d'autres serveurs\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://github.com/SocialGouv/thirdparties\"\n        >\n          Code source\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"thirdparties\") && <Panel title=\"GeoIP2\">\n        Géolocalise tous les serveurs contactés lors de l'ouverture d'une URL.\n        <br />\n        <br />\n        <li>Vie privée</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.maxmind.com/en/geoip-demo\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"wappalyzer\") && <Panel title=\"Wappalyzer\">\n        Wappalyzer reconnait +1500 technologies web, Javascript, CMS, outillage...\n        <br />\n        <br />\n        <li>Stack technique</li>\n        <li>Obsolescence</li>\n        <li>Parc</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.wappalyzer.com/\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import * as React from \"react\";\n\nimport { Jumbotron } from \"react-bootstrap\";\n\n\n\nexport const About: React.FC = () => {\n    return (\n        <div>\n            <br />\n            <Jumbotron style={{ padding: \"2em\", textAlign: \"center\" }}>\n                <h1>À propos</h1>\n            </Jumbotron>\n            <div style={{ margin: '0 auto', maxWidth: '80%' }}>\n                <br />\n                  DashLord est <strong>100% open source</strong>, vous pouvez y contribuer en créant de la documentation, en proposant du code, ou encore en partageant vos questions <a href=\"https://github.com/socialgouv/dashlord\" target=\"_blank\" rel=\"noopener noreferrer\">sur le repository github</a>.\n\n               < br /> <br />\n\n                 L'objectif de DashLord est d'identifier des points d'attention mais aussi de proposer des solutions actionnables.\n                 < br /> <br />\n\n                 DashLord est né à la <a href=\"https://fabrique.social.gouv.fr\" target=\"_blank\" rel=\"noopener noreferrer\" > Fabrique des ministères sociaux</a > pour répondre aux besoins d'évaluation et de mise en oeuvre des bonnes pratiques de développement web.\n                  < br /> <br />\n                Vous pouvez facilement créer votre propre DashLord pour vos URLs en suivant <a href=\"https://github.com/SocialGouv/dashlord/blob/main/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">les instructions sur le GitHub</a>.\n            </div>\n        </div >\n    );\n};\n","import * as React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nimport { Jumbotron, CardColumns } from \"react-bootstrap\";\nimport uniq from \"lodash.uniq\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Panel } from \"./Panel\";\n\ntype UsageChartProps = { data: any };\n\nconst UsageChart: React.FC<UsageChartProps> = ({ data }) => {\n  return (\n      <BarChart\n        width={300}\n        height={200}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#82ca9d\" />\n      </BarChart>\n  );\n};\n\nconst toChartData = (category: WappalyzerParsedCategory) =>\n  category.items.map((item) => ({\n    name: item.name,\n    count: item.urls.length,\n  }));\n\ntype WappalyzerDashboardProps = { report: DashLordReport };\n\ntype WappalyzerParsedCategory = {\n  name: string;\n  items: {\n    name: string;\n    website: string | undefined;\n    urls: string[];\n  }[];\n};\n\nconst getCategoriesByUrl = (report: DashLordReport) => {\n  const allTechnologies = report\n    .flatMap((url) => ({ url, wappalyzer: url.wappalyzer }))\n    .filter(({ url, wappalyzer }) => !!wappalyzer)\n    .flatMap(\n      ({ url, wappalyzer }) =>\n        (wappalyzer &&\n          wappalyzer.technologies.map((details) => ({\n            ...details,\n            url: url.url,\n          }))) ||\n        []\n    );\n  const categoriesNames = uniq(\n    allTechnologies.flatMap(\n      (t) => t.categories && t.categories.map((c) => c.name)\n    )\n  );\n\n  const getTechUrl = (name: string) =>\n    allTechnologies.find((t) => t.name === name)?.website;\n\n  const categories = categoriesNames.map((name) => {\n    const categoryTechs = allTechnologies.filter(\n      (t) => t.categories && t.categories.find((c) => c.name === name)\n    );\n\n    // group techs by name and sort by count desc\n    const byTech = categoryTechs.reduce((a, t) => {\n      if (!a[t.name]) {\n        a[t.name] = [];\n      }\n      a[t.name].push(t.url);\n      return a;\n    }, {} as Record<string, any>);\n\n    const sortedTechs = Object.keys(byTech)\n      .map((name) => ({\n        name,\n        website: getTechUrl(name),\n        urls: byTech[name] as string[],\n      }))\n      .sort((a, b) => a.urls.length - b.urls.length)\n      .reverse();\n\n    return {\n      name,\n      items: sortedTechs,\n    };\n  });\n\n  return categories;\n};\n\nexport const WappalyzerDashboard = ({ report }: WappalyzerDashboardProps) => {\n  const categories = getCategoriesByUrl(report);\n  return (\n    <div>\n      <br />\n      <Jumbotron style={{ padding: \"2em\" }}>\n        <h1>Wappalyzer : technologies détectées</h1>\n      </Jumbotron>\n      <CardColumns>\n        {categories.map((category) => (\n          <Panel key={category.name} title={category.name}>\n            <UsageChart data={toChartData(category)} />\n            <br/>\n            {category.items.map((item) => (\n              <div key={item.name}>\n                <b>\n                  <a\n                    href={item.website}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {item.name} ({item.urls.length})\n                  </a>\n                </b>\n                <ul>\n                  {item.urls.map((url) => (\n                    <li key={url}>\n                      <Link to={`/url/${url}`}>{url}</Link>\n                    </li>\n                  ))}\n                </ul>\n                <br />\n              </div>\n            ))}\n          </Panel>\n        ))}\n      </CardColumns>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Container, Row, Alert } from \"react-bootstrap\";\n\nimport {\n  useParams,\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { Sidebar } from \"./components/Sidebar\";\nimport { Topbar } from \"./components/Topbar\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Url } from \"./components/Url\";\nimport { Intro } from \"./components/Intro\";\nimport { ScrollToTop } from  \"./components/ScrollToTop\";\nimport { About } from \"./components/About\";\nimport { WappalyzerDashboard } from \"./components/WappalyzerDashboard\";\n\nconst report: DashLordReport = require(\"./report.json\");\n\ntype CategoryRouteProps = { report: DashLordReport };\n\n// for some reason react-router `:url*` didnt work, use `*` only\ninterface CategoryParamTypes {\n  category: string;\n}\n\nconst CategoryRoute: React.FC<CategoryRouteProps> = (props) => {\n  const params = useParams<CategoryParamTypes>();\n  const category = window.decodeURIComponent(params.category);\n  const urls = props.report.filter((u) => u.category === category)\n  return (\n    <React.Fragment>\n      <br />\n      <h3>{category} : {urls.length} urls</h3>\n      <Dashboard report={urls} />\n    </React.Fragment>\n  );\n};\n\ninterface TagParamTypes {\n  tag: string;\n}\n\ntype TagRouteProps = { report: DashLordReport };\n\nconst TagRoute: React.FC<TagRouteProps> = (props) => {\n  const params = useParams<TagParamTypes>();\n  const tag = window.decodeURIComponent(params.tag);\n  const urls = props.report.filter((u) => u.tags && u.tags.includes(tag))\n  return (\n    <React.Fragment>\n      <br />\n      <h3>{tag} : {urls.length} urls</h3>\n      <Dashboard report={urls} />\n    </React.Fragment>\n  );\n};\n\ninterface UrlParamTypes {\n  \"0\": string;\n}\n\ntype UrlRouteProps = { report: DashLordReport };\n\nconst UrlRoute: React.FC<UrlRouteProps> = (props) => {\n  const params = useParams<UrlParamTypes>();\n  const url = window.decodeURIComponent(params[\"0\"]);\n  const urlData = props.report.find((u) => u.url === url);\n  if (!urlData) {\n    return <Alert variant=\"danger\">Impossible de trouver le rapport pour {url}</Alert>\n  }\n  return <Url url={url} report={urlData} />\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <ScrollToTop />\n        <Topbar />\n        <Container fluid>\n          <Row>\n            <Sidebar report={report} />\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n              <Switch>\n                <Route path=\"/url/*\">\n                  <UrlRoute report={report} />\n                </Route>\n                <Route path=\"/dashboard\">\n                  <Dashboard report={report} />\n                </Route>\n                <Route path=\"/category/:category\">\n                  <CategoryRoute report={report} />\n                </Route>\n                <Route path=\"/tag/:tag\">\n                  <TagRoute report={report} />\n                </Route>\n                <Route path=\"/wappalyzer\">\n                  <WappalyzerDashboard report={report} />\n                </Route>\n                <Route path=\"/intro\">\n                  <Intro />\n                </Route>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route path=\"/\">\n                  <Dashboard report={report} />\n                </Route>\n              </Switch>\n            </main>\n          </Row>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"./bootstrap-theme.scss\";\nimport \"./custom.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}