{"totalCount":30,"grade":"D","repositories":[{"url":"https://github.com/MTES-MCT/mobilic","grade":"A","alerts":[]},{"url":"https://github.com/MTES-MCT/mobilic-api","grade":"D","alerts":[{"number":102,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/102","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/102","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUZ-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUZ&open=AZEC4L9SRsfwZ7md5GUZ\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":23631,"end_column":23663},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/102/instances"},{"number":101,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/101","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/101","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUY-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUY&open=AZEC4L9SRsfwZ7md5GUY\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":23393,"end_column":23425},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/101/instances"},{"number":100,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/100","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/100","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUX-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUX&open=AZEC4L9SRsfwZ7md5GUX\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":21682,"end_column":21714},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/100/instances"},{"number":99,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/99","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/99","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUW-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUW&open=AZEC4L9SRsfwZ7md5GUW\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":16122,"end_column":16154},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/99/instances"},{"number":98,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/98","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/98","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUV-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUV&open=AZEC4L9SRsfwZ7md5GUV\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":10807,"end_column":10839},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/98/instances"},{"number":97,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/97","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/97","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUU-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUU&open=AZEC4L9SRsfwZ7md5GUU\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":5531,"end_column":5563},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/97/instances"},{"number":96,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/96","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/96","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUm-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUm&open=AZEC4L9SRsfwZ7md5GUm\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":75374,"end_column":75406},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/96/instances"},{"number":95,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/95","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/95","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUl-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUl&open=AZEC4L9SRsfwZ7md5GUl\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":69148,"end_column":69180},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/95/instances"},{"number":94,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/94","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/94","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUk-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUk&open=AZEC4L9SRsfwZ7md5GUk\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":69115,"end_column":69147},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/94/instances"},{"number":93,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/93","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/93","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUj-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUj&open=AZEC4L9SRsfwZ7md5GUj\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":65163,"end_column":65195},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/93/instances"},{"number":92,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/92","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/92","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUi-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUi&open=AZEC4L9SRsfwZ7md5GUi\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":60704,"end_column":60736},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/92/instances"},{"number":91,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/91","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/91","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUh-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUh&open=AZEC4L9SRsfwZ7md5GUh\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":58148,"end_column":58180},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/91/instances"},{"number":90,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/90","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/90","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUg-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUg&open=AZEC4L9SRsfwZ7md5GUg\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":41237,"end_column":41269},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/90/instances"},{"number":89,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/89","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/89","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUf-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUf&open=AZEC4L9SRsfwZ7md5GUf\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":33663,"end_column":33695},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/89/instances"},{"number":88,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/88","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/88","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUe-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUe&open=AZEC4L9SRsfwZ7md5GUe\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":32993,"end_column":33025},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/88/instances"},{"number":87,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/87","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/87","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUd-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUd&open=AZEC4L9SRsfwZ7md5GUd\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":30975,"end_column":31007},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/87/instances"},{"number":86,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/86","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/86","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUc-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUc&open=AZEC4L9SRsfwZ7md5GUc\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":30236,"end_column":30268},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/86/instances"},{"number":85,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/85","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/85","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUb-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUb&open=AZEC4L9SRsfwZ7md5GUb\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":27680,"end_column":27712},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/85/instances"},{"number":84,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/84","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/84","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L9SRsfwZ7md5GUa-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L9SRsfwZ7md5GUa&open=AZEC4L9SRsfwZ7md5GUa\">SonarCloud</a></p>"},"location":{"path":"app/templates/company_certification_pdf.html","start_line":164,"end_line":164,"start_column":27629,"end_column":27661},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/84/instances"},{"number":83,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/83","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/83","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GUC-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GUC&open=AZEC4L8mRsfwZ7md5GUC\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":101352,"end_column":101384},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/83/instances"},{"number":82,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/82","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/82","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GUB-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GUB&open=AZEC4L8mRsfwZ7md5GUB\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":99086,"end_column":99118},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/82/instances"},{"number":81,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/81","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/81","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GUA-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GUA&open=AZEC4L8mRsfwZ7md5GUA\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":95413,"end_column":95445},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/81/instances"},{"number":80,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/80","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/80","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GTz-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GTz&open=AZEC4L8mRsfwZ7md5GTz\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":51591,"end_column":51623},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/80/instances"},{"number":79,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/79","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/79","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GTy-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GTy&open=AZEC4L8mRsfwZ7md5GTy\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":48892,"end_column":48924},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/79/instances"},{"number":78,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/78","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/78","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GTx-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GTx&open=AZEC4L8mRsfwZ7md5GTx\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":48451,"end_column":48483},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/78/instances"},{"number":77,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/77","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/77","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GTw-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GTw&open=AZEC4L8mRsfwZ7md5GTw\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":46180,"end_column":46212},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/77/instances"},{"number":76,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/76","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/76","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GTv-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GTv&open=AZEC4L8mRsfwZ7md5GTv\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":44650,"end_column":44682},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/76/instances"},{"number":75,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/75","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/75","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GTu-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GTu&open=AZEC4L8mRsfwZ7md5GTu\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":40661,"end_column":40693},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/75/instances"},{"number":74,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/74","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/74","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GTt-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GTt&open=AZEC4L8mRsfwZ7md5GTt\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":38241,"end_column":38273},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/74/instances"},{"number":73,"created_at":"2024-08-08T14:41:59Z","updated_at":"2024-08-08T14:42:00Z","url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/73","html_url":"https://github.com/MTES-MCT/mobilic-api/security/code-scanning/73","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"secrets:S6999","severity":"warning","description":"OVH keys should not be disclosed","name":"secrets:S6999","tags":["cwe"],"full_description":"OVH keys should not be disclosed","help":"<p>Secret leaks often occur when a sensitive piece of authentication data is stored with the source code of an application. Considering the source\ncode is intended to be deployed across multiple assets, including source code repositories or application hosting servers, the secrets might get\nexposed to an unintended audience.</p>\n<h2>Why is this an issue?</h2>\n<p>In most cases, trust boundaries are violated when a secret is exposed in a source code repository or an uncontrolled deployment environment.\nUnintended people who don’t need to know the secret might get access to it. They might then be able to use it to gain unwanted access to associated\nservices or resources.</p>\n<p>The trust issue can be more or less severe depending on the people’s role and entitlement.</p>\n<h3>What is the potential impact?</h3>\n<p>The OVH API allows to purchase, manage, update, and configure OVHcloud products.</p>\n<p>Below are some real-world scenarios that illustrate some impacts of an attacker exploiting the secret.</p>\n<h4>Infrastructure takeover</h4>\n<p>By obtaining a leaked secret, an attacker can gain control over your organization’s OVH infrastructure. They can modify DNS settings, redirect\ntraffic, or launch malicious instances that can be used for various nefarious activities, including launching DDoS attacks, hosting phishing websites,\nor distributing malware. Malicious instances may also be used for resource-intensive tasks such as cryptocurrency mining.</p>\n<p>This can result in legal liability, but also increased costs, degraded performance, and potential service disruptions.</p>\n<p>Furthermore, corporate OVH infrastructures are often connected to other services and to the internal networks of the organization. Because of this,\ncloud infrastructure is often used by attackers as a gateway to other assets. Attackers can leverage this gateway to gain access to more services, to\ncompromise more business-critical data and to cause more damage to the overall infrastructure.</p>\n<h4>Compromise of sensitive data</h4>\n<p>If the affected service is used to store or process personally identifiable information or other sensitive data, attackers knowing an\nauthentication secret could be able to access it. Depending on the type of data that is compromised, it could lead to privacy violations, identity\ntheft, financial loss, or other negative outcomes.</p>\n<p>In most cases, a company suffering a sensitive data compromise will face a reputational loss when the security issue is publicly disclosed.</p>\n<h4>Modification of application data</h4>\n<p>Applications may rely on data that cannot be distributed with the application code. This may be due to the size of the data, or because the data is\nregularly updated. This data is downloaded by the application as it is needed.</p>\n<p>If an attacker can gain access to an authentication secret, they may be able to alter or delete this application data. This may cause parts of the\napplication to misbehave or stop working. Maliciously altered data could also contain undesirable content which results in reputational damage.</p>\n<h2>How to fix it</h2>\n<p><strong>Revoke the secret</strong></p>\n<p>Revoke any leaked secrets and remove them from the application source code.</p>\n<p>Before revoking the secret, ensure that no other applications or processes are using it. Other usages of the secret will also be impacted when the\nsecret is revoked.</p>\n<p><strong>Use a secret vault</strong></p>\n<p>A secret vault should be used to generate and store the new secret. This will ensure the secret’s security and prevent any further unexpected\ndisclosure.</p>\n<p>Depending on the development platform and the leaked secret type, multiple solutions are currently available.</p>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nprops.set(\"ovh-key\", \"EXEgWIz07P0HYwtQDs7cNIqCiQaWSuHF\") // Noncompliant\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nprops.set(\"ovh-key\", System.getenv(\"OVH_KEY\"))\n</pre>\n<h2>Resources</h2>\n<h3>Standards</h3>\n<ul>\n  <li> OWASP - <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">Top 10 2021 Category A7 - Identification and\n  Authentication Failures</a> </li>\n  <li> OWASP - <a href=\"https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure\">Top 10 2017 Category A3 - Sensitive Data\n  Exposure</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/798\">CWE-798 - Use of Hard-coded Credentials</a> </li>\n  <li> CWE - <a href=\"https://cwe.mitre.org/data/definitions/259\">CWE-259 - Use of Hard-coded Password</a> </li>\n  <li> STIG Viewer - <a href=\"https://stigviewer.com/stig/application_security_and_development/2023-06-08/finding/V-222642\">Application Security and\n  Development: V-222642</a> - The application must not contain embedded authentication data. </li>\n</ul>","security_severity_level":"high"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"42ed36ab53260bffdd3b3f19b99d3622fd19c413","message":{"text":"<!--SONAR_ISSUE_KEY:AZEC4L8mRsfwZ7md5GTs-->Make sure this OVH key gets revoked, changed, and removed from the code. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_mobilic-api&issues=AZEC4L8mRsfwZ7md5GTs&open=AZEC4L8mRsfwZ7md5GTs\">SonarCloud</a></p>"},"location":{"path":"app/templates/control_bulletin.html","start_line":119,"end_line":119,"start_column":37764,"end_column":37796},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/mobilic-api/code-scanning/alerts/73/instances"}]}]}