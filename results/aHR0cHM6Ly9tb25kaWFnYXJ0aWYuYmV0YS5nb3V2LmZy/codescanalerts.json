{"totalCount":1,"grade":"D","repositories":[{"url":"https://github.com/MTES-MCT/sparte","grade":"D","alerts":[{"number":12,"created_at":"2024-09-19T21:52:10Z","updated_at":"2024-09-19T21:52:12Z","url":"https://api.github.com/repos/MTES-MCT/sparte/code-scanning/alerts/12","html_url":"https://github.com/MTES-MCT/sparte/security/code-scanning/12","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"docker:S7018","severity":"warning","description":"Arguments in long RUN instructions should be sorted","name":"docker:S7018","tags":[],"full_description":"Arguments in long RUN instructions should be sorted","help":"<p>In Dockerfiles, when commands within a <code>RUN</code> instruction have a lot of arguments, especially those that install system packages, it is\nimportant to ensure that the arguments are sorted alphabetically (if the order is not enforced by a command). This practice enhances the readability\nand maintainability of the code. It allows for easier tracking of modifications and can help prevent potential errors.</p>\n<h2>Why is this an issue?</h2>\n<p>When arguments in <code>RUN</code> instructions are not sorted alphabetically, it can make the Dockerfile harder to read and maintain. However,\nwhen arguments are sorted, it is easier to track changes in version control systems and to locate specific arguments. This applies first and foremost\nto package managers, where a list of installed packages can grow over time.</p>\n<h2>How to fix it</h2>\n<h3>Code examples</h3>\n<h4>Noncompliant code example</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"noncompliant\">\nFROM ubuntu:20.04\n\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    unzip \\\n    wget \\\n    curl \\\n    git \\\n    zip\n</pre>\n<pre data-diff-id=\"2\" data-diff-type=\"noncompliant\">\nFROM alpine:3.12\n\nRUN apk add unzip wget curl git zip\n</pre>\n<h4>Compliant solution</h4>\n<pre data-diff-id=\"1\" data-diff-type=\"compliant\">\nFROM ubuntu:20.04\n\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    curl \\\n    git \\\n    unzip \\\n    wget \\\n    zip\n</pre>\n<pre data-diff-id=\"2\" data-diff-type=\"compliant\">\nFROM alpine:3.12\n\nRUN apk add curl git unzip wget zip\n</pre>\n<h2>Resources</h2>\n<h3>Documentation</h3>\n<ul>\n  <li> Docker Docs - <a href=\"https://docs.docker.com/build/building/best-practices/#sort-multi-line-arguments\">Building best practices</a> </li>\n</ul>","security_severity_level":"low"},"tool":{"name":"SonarCloud","guid":null,"version":null},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"(default)","environment":"{}","category":"","state":"open","commit_sha":"ce8a9ba86b023f1e06e4784613fab7fcea5777a5","message":{"text":"<!--SONAR_ISSUE_KEY:AZHobjMDfRrfcdAcJboT-->Sort these package names alphanumerically. <p>See more on <a href=\"https://sonarcloud.io/project/issues?id=MTES-MCT_sparte&issues=AZHobjMDfRrfcdAcJboT&open=AZHobjMDfRrfcdAcJboT\">SonarCloud</a></p>"},"location":{"path":"Dockerfile","start_line":8,"end_line":8,"start_column":5,"end_column":61},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/sparte/code-scanning/alerts/12/instances"}]}]}